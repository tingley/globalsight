--
--  This creates MySql schema for CAP product.
--

--  CAP SCHEMA -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -

--  SEQUENCE
--
DROP TABLE IF EXISTS `SEQUENCE` CASCADE;
CREATE TABLE SEQUENCE
(
  NAME VARCHAR(40)
    PRIMARY KEY,
  COUNT INT
    NOT NULL
);

-- CAP sequences
INSERT INTO SEQUENCE VALUES('COMPANY_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('REQUEST_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('JOB_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('PROFILE_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('PROJECT_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('COMMENTS_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('ISSUE_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('LOCPROF_VER_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('TU_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('TUV_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('LEVERAGE_GROUP_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('PAGE_TEMPLATE_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('TEMPLATE_PART_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('SOURCE_PAGE_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('TARGET_PAGE_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('TM_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('TASK_TUV_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('SYSTEM_PARAMETER_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('USER_PARAMETER_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('IMAGE_REPLACE_FILE_MAP_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('LOCALE_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('ACTIVITY_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('LOCALE_PAIR_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('CURRENCY_CONVERSION_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('RATE_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('HOLIDAY_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('RESERVED_TIME_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('CALENDAR_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('USER_CALENDAR_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('CALENDAR_WORKING_DAY_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('USER_CALENDAR_WORKING_DAY_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('CALENDAR_WORKING_HOUR_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('USER_CALENDAR_WORKING_HOUR_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('WORKFLOW_TEMPLATE_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('WORKFLOW_REQUEST_SEQ',1000);
INSERT INTO SEQUENCE VALUES('COST_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('AOW_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('SURCHARGE_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('EXPORTING_PAGE_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('EXPORT_BATCH_EVENT_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('SECONDARY_TARGET_FILE_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('TM_PROFILE_SEQ',1000);
INSERT INTO SEQUENCE VALUES('PROJECT_TM_SEQ',1000);
INSERT INTO SEQUENCE VALUES('TMP_PROJECT_TM_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('WORKFLOW_OWNER_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('CMS_USER_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('USER_FIELD_SECURITY_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('COST_BY_WORD_COUNT_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('PERMISSIONGROUP_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('TRANSLATION_UNIT_SEQ', 1000);
INSERT INTO SEQUENCE VALUES('TRANSLATION_UNIT_VARIANT_SEQ', 1000);
COMMIT;

--

--  CODE_SET
--
DROP TABLE IF EXISTS CODE_SET CASCADE;
CREATE TABLE CODE_SET
(
  CODE_SET VARCHAR(30)
     PRIMARY KEY
);

--  LANGUAGE
--
DROP TABLE IF EXISTS `LANGUAGE` CASCADE;
CREATE TABLE LANGUAGE
(
  ISO_LANG_CODE VARCHAR(3)
    PRIMARY KEY
);

--  COUNTRY
--
DROP TABLE IF EXISTS COUNTRY CASCADE;
CREATE TABLE COUNTRY
(
  ISO_COUNTRY_CODE VARCHAR(3)
    PRIMARY KEY
);


--  LOCALE
--
DROP TABLE IF EXISTS LOCALE CASCADE;
CREATE TABLE LOCALE
(
  ID BIGINT
    AUTO_INCREMENT
    PRIMARY KEY,
  ISO_LANG_CODE VARCHAR(3)
    NOT NULL,
  ISO_COUNTRY_CODE VARCHAR(3),
  IS_UI_LOCALE CHAR(1) DEFAULT 'N'
    NOT NULL
    CHECK (IS_UI_LOCALE IN ('Y', 'N')),
  CONSTRAINT FK_LOCALE_ISO_LANG_CODE FOREIGN KEY (ISO_LANG_CODE) REFERENCES LANGUAGE(ISO_LANG_CODE),
  CONSTRAINT FK_LOCALE_ISO_COUNTRY_CODE FOREIGN KEY (ISO_COUNTRY_CODE) REFERENCES COUNTRY(ISO_COUNTRY_CODE)
) AUTO_INCREMENT = 1000;


--  User

DROP TABLE IF EXISTS USER CASCADE;
CREATE TABLE USER
(
   ID BIGINT
      AUTO_INCREMENT
      PRIMARY KEY,
   USER_ID VARCHAR(100),
   STATE INTEGER,
   USER_NAME VARCHAR(100),
   FIRST_NAME VARCHAR(100),
   LAST_NAME VARCHAR(100),
   TITLE VARCHAR(100),
   COMPANY_NAME VARCHAR(40),
   PASSWORD VARCHAR(1000),
   WSSE_PASSWORD VARCHAR(100),
   EMAIL VARCHAR(1000),
   CC_EMAIL VARCHAR(1000),
   BCC_EMAIL VARCHAR(1000),
   ADDRESS VARCHAR(1000),
   DEFAULT_LOCALE VARCHAR(100),
   TYPE INTEGER,
   OFFICE_PHONE_NUMBER VARCHAR(300),
   HOME_PHONE_NUMBER VARCHAR(300),
   CELL_PHONE_NUMBER VARCHAR(300),
   FAX_PHONE_NUMBER VARCHAR(300),
   
   IN_ALL_PROJECTS CHAR(1)
     NOT NULL
     CHECK (IS_ACTIVE IN ('Y', 'N'))
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS CONTAINER_ROLE CASCADE;
CREATE TABLE CONTAINER_ROLE
(
  id BIGINT AUTO_INCREMENT
      PRIMARY KEY,
  NAME VARCHAR(100),
  STATE BIGINT,
  ACTIVITY_ID BIGINT,
  SOURCE_LOCALE VARCHAR(100),
  TARGET_LOCALE VARCHAR(100)
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS USER_ROLE CASCADE;
CREATE TABLE USER_ROLE
(
  id BIGINT AUTO_INCREMENT
      PRIMARY KEY,
  NAME VARCHAR(100),
  STATE BIGINT,
  ACTIVITY_ID BIGINT,
  SOURCE_LOCALE VARCHAR(100),
  TARGET_LOCALE VARCHAR(100),
  USER VARCHAR(100),
  RATE VARCHAR(100),
  COST VARCHAR(100)
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS CONTAINER_ROLE_USER_IDS CASCADE;
CREATE TABLE CONTAINER_ROLE_USER_IDS
(
  ROLE_ID BIGINT,
  USER_ID VARCHAR(100),
  PRIMARY KEY (ROLE_ID, USER_ID)
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS CONTAINER_ROLE_RATE CASCADE;
CREATE TABLE CONTAINER_ROLE_RATE
(
  ROLE_ID BIGINT,
  RATE_ID BIGINT,
  PRIMARY KEY (ROLE_ID, RATE_ID)
) AUTO_INCREMENT = 1000;

CREATE INDEX IDX_USER_JOB_USER_ID ON USER(USER_ID);
CREATE INDEX IDX_USER_JOB_USER_NAME ON USER(USER_NAME);
CREATE INDEX IDX_CONTAINER_ROLE_NAME ON CONTAINER_ROLE(NAME);
CREATE INDEX IDX_USER_ROLE_NAME ON USER_ROLE(NAME);

insert into `user` 
(
  `ID`, 
  `USER_ID`, 
  `STATE`, 
  `USER_NAME`, 
  `FIRST_NAME`, 
  `LAST_NAME`, 
  `TITLE`, 
  `COMPANY_NAME`, 
  `PASSWORD`, 
  `EMAIL`, 
  `CC_EMAIL`, 
  `BCC_EMAIL`, 
  `ADDRESS`, 
  `DEFAULT_LOCALE`, 
  `TYPE`, 
  `OFFICE_PHONE_NUMBER`, 
  `HOME_PHONE_NUMBER`, 
  `CELL_PHONE_NUMBER`, 
  `FAX_PHONE_NUMBER`, 
  `IN_ALL_PROJECTS`
 ) 
 values
 (
  '1',
  '%%system4_admin_username%%',
  '2',
  '%%system4_admin_username%%',
  'GlobalSight',
  'Administrator',
  NULL,
  '%%system4_super_company_name%%',
  '%%super_admin_password%%',
  '%%admin_email%%',
  NULL,
  NULL,
  NULL,
  'en_US',
  '1',
  '',
  '',
  '',
  '',
  'N'
 );

--  LOCALE_CODESET
--
DROP TABLE IF EXISTS LOCALE_CODESET CASCADE;
CREATE TABLE LOCALE_CODESET
(
   LOCALE_ID BIGINT,
   CODE_SET VARCHAR(30),
   PRIMARY KEY(LOCALE_ID, CODE_SET),
   CONSTRAINT FK_LOCALE_CODESET_LOCALE_ID FOREIGN KEY (LOCALE_ID) REFERENCES LOCALE(ID),
   CONSTRAINT FK_LOCALE_CODESET_CODE_SET FOREIGN KEY (CODE_SET) REFERENCES CODE_SET(CODE_SET)
);

--  COMPANY
--
DROP TABLE IF EXISTS COMPANY CASCADE;
CREATE TABLE COMPANY
(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(40) NOT NULL,
  DESCRIPTION VARCHAR(4000),
  IS_ACTIVE CHAR(1) NOT NULL CHECK(IS_ACTIVE IN ('Y','N')),
  ENABLE_IP_FILTER char(1) DEFAULT 'Y',
  ENABLE_TM_ACCESS_CONTROL char(1) DEFAULT 'N',
  ENABLE_TB_ACCESS_CONTROL char(1) DEFAULT 'N',
  ENABLE_QA_CHECKS char(1) DEFAULT 'N',
  ENABLE_SSO_LOGIN char(1) DEFAULT 'N' NOT NULL,
  SSO_IDP_URL VARCHAR(256) NULL,
  SSO_LOGIN_URL VARCHAR(256) NULL,
  SSO_LOGOUT_URL VARCHAR(256) NULL,
  SSO_WS_ENDPOINT VARCHAR(256) NULL,
  TM_VERSION SMALLINT DEFAULT 3 NOT NULL,
  SESSION_TIME VARCHAR(10) DEFAULT NULL,
  EMAIL VARCHAR(100) DEFAULT NULL,
  STATE VARCHAR(40) DEFAULT NULL,
  BIG_DATA_STORE_LEVEL SMALLINT(1) DEFAULT 1,
  ENABLE_DITA_CHECKS char(1) DEFAULT 'N',
  ENABLE_WORKFLOW_STATE_POSTS char(1) DEFAULT 'N',
  MIGRATE_PROCESSING INT DEFAULT 0
) AUTO_INCREMENT = 1000;

--
--  Create the super company
--
INSERT INTO COMPANY (
    ID, NAME, DESCRIPTION, IS_ACTIVE, ENABLE_IP_FILTER,
    ENABLE_TM_ACCESS_CONTROL, ENABLE_TB_ACCESS_CONTROL, ENABLE_SSO_LOGIN, SSO_IDP_URL, SSO_LOGIN_URL,
    SSO_LOGOUT_URL, SSO_WS_ENDPOINT, TM_VERSION, SESSION_TIME, EMAIL,
    STATE, BIG_DATA_STORE_LEVEL, MIGRATE_PROCESSING)
VALUES
    (1, '%%system4_super_company_name%%', 'Super company', 'Y', 'Y',
     'N','N', "N", "", "",
     "", "", 3, NULL, '%%admin_email%%',
     NULL, 1, 0);

-- CATEGORY_SEGMENT_COMMENT
--
DROP TABLE IF EXISTS CATEGORY_SEGMENT_COMMENT CASCADE;
CREATE TABLE CATEGORY_SEGMENT_COMMENT
(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  CATEGORY VARCHAR(200),
  COMPANY_ID BIGINT NOT NULL,
  IS_ACTIVE CHAR(1) NOT NULL DEFAULT 'Y',
  CONSTRAINT FK_CATEGORY_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1;

--  SSOUserMapping
--
DROP TABLE IF EXISTS SSO_USER_MAPPING CASCADE;
CREATE TABLE SSO_USER_MAPPING
(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  COMPANY_ID BIGINT NOT NULL,
  USER_ID VARCHAR(80) NOT NULL,
  SSO_USER_ID VARCHAR(100)
) AUTO_INCREMENT=1 ENGINE=InnoDB DEFAULT CHARSET=utf8;

--  USER_ID_USER_NAME
--
DROP TABLE IF EXISTS USER_ID_USER_NAME CASCADE;
CREATE TABLE USER_ID_USER_NAME
(
  USER_ID VARCHAR(80) PRIMARY KEY,
  USER_NAME VARCHAR(80) NOT NULL
);

--  LOCALE_PAIR
--
DROP TABLE IF EXISTS LOCALE_PAIR CASCADE;
CREATE TABLE LOCALE_PAIR
(
  ID BIGINT
    AUTO_INCREMENT
    PRIMARY KEY,
  SOURCE_LOCALE_ID BIGINT,
  TARGET_LOCALE_ID BIGINT,
  COMPANY_ID BIGINT
    NOT NULL,
  IS_ACTIVE CHAR(1) DEFAULT 'Y'
    NOT NULL
    CHECK (IS_ACTIVE IN ('Y', 'N')),
    UNIQUE(SOURCE_LOCALE_ID, TARGET_LOCALE_ID, COMPANY_ID),
    CONSTRAINT FK_LOCALE_PAIR_SOURCE_LOCALE_ID FOREIGN KEY (SOURCE_LOCALE_ID) REFERENCES LOCALE(ID),
    CONSTRAINT FK_LOCALE_PAIR_TARGET_LOCALE_ID FOREIGN KEY (TARGET_LOCALE_ID) REFERENCES LOCALE(ID),
    CONSTRAINT FK_LOCALE_PAIR_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;


--  CURRENCY
--
DROP TABLE IF EXISTS CURRENCY CASCADE;
CREATE TABLE CURRENCY
(
   ID BIGINT
      AUTO_INCREMENT
      PRIMARY KEY,
   NAME VARCHAR(40)
      NOT NULL,
   ISO_CURRENCY_CODE CHAR(3)
      NOT NULL
      UNIQUE
) AUTO_INCREMENT = 1000;


--  CURRENCY_CONVERSION
--
DROP TABLE IF EXISTS CURRENCY_CONVERSION CASCADE;
CREATE TABLE CURRENCY_CONVERSION
(
   ID BIGINT
      AUTO_INCREMENT
      PRIMARY KEY,
   CURRENCY_ID BIGINT
      NOT NULL,
   CONVERSION_FACTOR FLOAT
      NOT NULL,
   COMPANY_ID BIGINT
      NOT NULL,
   IS_ACTIVE CHAR(1)
      NOT NULL
      CHECK (IS_ACTIVE IN ('Y','N')),
   CONSTRAINT FK_CURRENCY_CONVERSION_CURRENCY_ID FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY(ID),
   CONSTRAINT FK_CURRENCY_CONVERSION_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;


--  ACTIVITY
--
DROP TABLE IF EXISTS ACTIVITY CASCADE;
CREATE TABLE ACTIVITY
(
  ID BIGINT
    AUTO_INCREMENT
    PRIMARY KEY,
  NAME VARCHAR(40)
    NOT NULL,
  DISPLAY_NAME VARCHAR(40)
    NOT NULL,
  COMPANY_ID BIGINT
    NOT NULL,
  DESCRIPTION VARCHAR(4000),
  IS_ACTIVE CHAR(1)
    NOT NULL
    CHECK(IS_ACTIVE IN ('Y','N')),
  USE_TYPE VARCHAR(20)
    NOT NULL,
    CHECK(USE_TYPE IN ('TRANS','DTP')),
  TYPE VARCHAR(20)
    NOT NULL
    CHECK(TYPE IN ('TRANSLATE','REVIEW')),
  IS_EDITABLE CHAR(1)
    CHECK(IS_EDITABLE IN ('Y','N')),
  QA_CHECKS char(1) DEFAULT 'N',
  RUN_DITA_QA_CHECKS CHAR(1) DEFAULT 'N',
  AUTO_COMPLETE_ACTIVITY CHAR(1)
    NOT NULL DEFAULT 'N',
  COMPLETE_TYPE INT DEFAULT -1 NULL,
  AFTER_JOB_CREATION VARCHAR(40),
  AFTER_JOB_DISPATCH VARCHAR(40),
  AFTER_ACTIVITY_START VARCHAR(40),
  COMPLETE_SCHEDULE VARCHAR(10000) NULL,
  CONSTRAINT FK_ACTIVITY_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;

--  RATE
--
DROP TABLE IF EXISTS RATE CASCADE;
CREATE TABLE RATE
(
   ID BIGINT
      AUTO_INCREMENT
      PRIMARY KEY,
   NAME VARCHAR(40)
      NOT NULL,
   CURRENCY_CONV_ID BIGINT,
   TYPE CHAR(1)
      CHECK (TYPE IN ('F','H','P','W','B')),
   ACTIVITY_ID BIGINT
      NOT NULL,
   LOCALE_PAIR_ID BIGINT
      NOT NULL,
   EXACT_CONTEXT_RATE FLOAT
      NOT NULL,
   EXACT_SEGMENT_TM_RATE FLOAT
      NOT NULL,
   FUZZY_LOW_RATE FLOAT
      NOT NULL,
   FUZZY_MED_RATE FLOAT
      NOT NULL,
   FUZZY_MED_HI_RATE FLOAT
      NOT NULL,
   FUZZY_HI_RATE FLOAT
      NOT NULL,
   EXACT_CONTEXT_RATE_PER FLOAT
      NOT NULL,
   EXACT_SEGMENT_TM_RATE_PER FLOAT
      NOT NULL,
   FUZZY_LOW_RATE_PER FLOAT
      NOT NULL,
   FUZZY_MED_RATE_PER FLOAT
      NOT NULL,
   FUZZY_MED_HI_RATE_PER FLOAT
      NOT NULL,
   FUZZY_HI_RATE_PER FLOAT
      NOT NULL,
   NO_MATCH_RATE FLOAT
      NOT NULL,
   REPETITION_RATE FLOAT
      NOT NULL,
   IN_CONTEXT_MATCH_RATE FLOAT
      NOT NULL,
   IN_CONTEXT_MATCH_RATE_PER FLOAT
      NOT NULL,
   REPETITION_RATE_PER FLOAT
      NOT NULL,
   UNIT_RATE FLOAT
      NOT NULL,
   IS_ACTIVE CHAR(1)
      NOT NULL
      CHECK (IS_ACTIVE IN ('Y','N')),
   CONSTRAINT FK_RATE_CURRENCY_CONV_ID FOREIGN KEY (CURRENCY_CONV_ID) REFERENCES CURRENCY_CONVERSION(ID),
   CONSTRAINT FK_RATE_ACTIVITY_ID FOREIGN KEY (ACTIVITY_ID) REFERENCES ACTIVITY(ID),
   CONSTRAINT FK_RATE_LOCALE_PAIR_ID FOREIGN KEY (LOCALE_PAIR_ID) REFERENCES LOCALE_PAIR(ID)
) AUTO_INCREMENT = 1000;

--  COTI API tables
--
DROP TABLE IF EXISTS coti_package CASCADE;
CREATE TABLE `coti_package` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `FILE_NAME` varchar(200) DEFAULT NULL,
  `COTI_PROJECT_NAME` varchar(200) DEFAULT NULL,
  `COTI_PROJECT_TIMESTAMP` varchar(40) DEFAULT NULL,
  `CREATION_DATE` datetime NOT NULL,
  `COMPANY_ID` bigint(20) NOT NULL,
  PRIMARY KEY (`ID`)
) AUTO_INCREMENT=1000;

DROP TABLE IF EXISTS coti_project CASCADE;
CREATE TABLE `coti_project` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `COTI_PROJECT_ID` varchar(100) DEFAULT NULL,
  `COTI_PROJECT_NAME` varchar(200) DEFAULT NULL,
  `SOURCE_LANG` varchar(40) DEFAULT NULL,
  `TARGET_LANG` varchar(40) DEFAULT NULL,
  `DIR_NAME` varchar(200) NOT NULL,
  `PACKAGE_ID` bigint(20) NOT NULL,
  `GLOBALSIGHT_JOB_ID` bigint(20) DEFAULT NULL,
  `STATUS` varchar(40) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) AUTO_INCREMENT=1000;

DROP TABLE IF EXISTS coti_document CASCADE;
CREATE TABLE `coti_document` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `PROJECT_ID` bigint(20) NOT NULL,
  `IS_TRANSLATION` char(1) NOT NULL DEFAULT 'Y',
  `IS_EXTERNAL` char(1) NOT NULL DEFAULT 'Y',
  `FILE_REF` varchar(200) NOT NULL,
  `ENCODING` varchar(40) DEFAULT NULL,
  `MIME_TYPE` varchar(80) DEFAULT NULL,
  `FILE_TYPE` varchar(40) DEFAULT NULL,
  `CREATION_DATE` varchar(40) DEFAULT NULL,
  `DESCRIPTION` varchar(500) DEFAULT NULL,
  PRIMARY KEY (`ID`)
) AUTO_INCREMENT=1000;

--  PROJECT
--
DROP TABLE IF EXISTS PROJECT CASCADE;
CREATE TABLE PROJECT
(
  PROJECT_SEQ BIGINT
    AUTO_INCREMENT
    PRIMARY KEY,
  PROJECT_NAME VARCHAR(40)
    NOT NULL,
  DESCRIPTION VARCHAR(4000),
  MANAGER_USER_ID VARCHAR(80)
    NOT NULL,
  TERMBASE_NAME VARCHAR(100),
  QUOTE_USER_ID VARCHAR(80),
  COMPANYID BIGINT
    NOT NULL,
  IS_ACTIVE CHAR(1) DEFAULT 'Y'
    NOT NULL,
  PMCOST DECIMAL(8,2) DEFAULT '0.00',
  ATTRIBUTE_SET_ID BIGINT,
  POREQUIRED tinyint(1) NOT NULL DEFAULT '1',
  AUTO_ACCEPT_TRANS tinyint(1) NOT NULL DEFAULT '0',
  AUTO_SEND_TRANS tinyint(1) NOT NULL DEFAULT '0',
  REVIEWONLYAUTOACCEPT tinyint(1) NOT NULL DEFAULT '0',
  REVIEWONLYAUTOSEND tinyint(1) NOT NULL DEFAULT '0',
  REVIEW_REPORT_INCLUDE_COMPACT_TAGS tinyint(1) NOT NULL DEFAULT '0',
  AUTOACCEPTPMTASK tinyint(1) NOT NULL DEFAULT '0',
  CHECK_UNTRANSLATED_SEGMENTS tinyint(1) NOT NULL DEFAULT '0',
  SAVE_TRANSLATIONS_EDIT_REPORT CHAR(1) DEFAULT 'Y',
  SAVE_REVIEWERS_COMMENTS_REPORT CHAR(1) DEFAULT 'Y',
  SAVE_OFFLINE_FILES CHAR(1) DEFAULT 'Y',
  ALLOW_MANUAL_QA_CHECKS char(1) DEFAULT 'N',
  AUTO_ACCEPT_QA_TASK char(1) DEFAULT 'N',
  AUTO_SEND_QA_REPORT char(1) DEFAULT 'N',
  MANUAL_RUN_DITA_CHECKS CHAR(1) DEFAULT 'N',
  AUTO_ACCEPT_DITA_QA_TASK CHAR(1) DEFAULT 'N',
  AUTO_SEND_DITA_QA_REPORT CHAR(1) DEFAULT 'N',
  UNIQUE(PROJECT_NAME, COMPANYID),
  CONSTRAINT FK_PROJECT_COMPANYID FOREIGN KEY (COMPANYID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;

--  PROJECT_USER
--
DROP TABLE IF EXISTS PROJECT_USER CASCADE;
CREATE TABLE PROJECT_USER
(
   PROJECT_ID BIGINT
      NOT NULL,
   USER_ID VARCHAR(80)
      NOT NULL,
   PRIMARY KEY(PROJECT_ID, USER_ID),
   CONSTRAINT FK_PROJECT_USER_PROJECT_ID FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(PROJECT_SEQ)
);

--  PERMISSIONGROUP
--
DROP TABLE IF EXISTS PERMISSIONGROUP CASCADE;
CREATE TABLE PERMISSIONGROUP
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  NAME VARCHAR(40)
     NOT NULL,
  COMPANY_ID BIGINT
     NOT NULL,
  DESCRIPTION VARCHAR(4000),
  PERMISSION_SET VARCHAR(4000)
     NOT NULL,
  UNIQUE(NAME, COMPANY_ID),
  CONSTRAINT FK_PERMISSIONGROUP_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;

--  PERMISSIONGROUP_USER
--
DROP TABLE IF EXISTS PERMISSIONGROUP_USER CASCADE;
CREATE TABLE PERMISSIONGROUP_USER
(
   PERMISSIONGROUP_ID BIGINT
      NOT NULL,
   USER_ID VARCHAR(80)
      NOT NULL,
   PRIMARY KEY(PERMISSIONGROUP_ID, USER_ID),
   CONSTRAINT FK_PERMISSIONGROUP_USER_PERMISSIONGROUP_ID FOREIGN KEY (PERMISSIONGROUP_ID) REFERENCES PERMISSIONGROUP(ID)
);

--  PERMISSION
--
DROP TABLE IF EXISTS PERMISSION CASCADE;
CREATE TABLE PERMISSION
(
  ID BIGINT
     PRIMARY KEY,
  NAME VARCHAR(120)
     NOT NULL
     UNIQUE
);

--
--  Create the default permission groups
--
--  create the default permission groups
INSERT INTO PERMISSIONGROUP VALUES(1,'SuperAdministrator', 1, 'Super Administrator Group for Multi-Company','||');
INSERT INTO PERMISSIONGROUP VALUES(2,'SuperProjectManager', 1, 'Super Project Manager Group for Multi-Company', '||');
-- insert into  permissiongroup values(3,'WorkflowManager', 1, 'Default Workflow Manager Group', '||');
-- insert into  permissiongroup values(4,'LocaleManager', 1, 'Default Locale Manager Group', '||');
INSERT INTO PERMISSIONGROUP VALUES(5,'LocalizationParticipant', 1, 'Default Localization Participant Group', '||');
-- insert into  permissiongroup values(6,'Customer', 1, 'Default Customer Group', '||');
-- insert into  permissiongroup values(7,'VendorAdmin', 1, 'Default VendorAdmin Group', '||');
-- insert into  permissiongroup values(8,'VendorManager', 1, 'Default VendorManager Group', '||');
-- insert into  permissiongroup values(9,'VendorViewer', 1, 'Default VendorViewer Group', '||');

--  Put the gsAdmin and the internal system user in the table
INSERT INTO PERMISSIONGROUP_USER VALUES(1, '%%system4_admin_username%%');

INSERT INTO USER_ID_USER_NAME VALUES('%%system4_admin_username%%', '%%system4_admin_username%%');

--  Admin perms
UPDATE PERMISSIONGROUP SET PERMISSION_SET='|1|2|3|6|10|13|14|17|20|26|29|33|35|36|37|38|39|40|41|42|43|44|52|55|56|62|67|73|78|80|85|86|89|93|95|99|108|113|117|127|128|131|136|137|142|144|147|149|150|151|152|155|156|160|161|163|170|172|174|178|181|182|184|190|191|192|193|194|197|202|208|212|213|214|215|231|232|233|234|235|236|237|238|239|240|241|272|355|388|'
WHERE ID=1;
--  PM perms
UPDATE PERMISSIONGROUP SET PERMISSION_SET='|3|4|5|6|7|8|9|10|11|12|13|14|17|18|19|20|21|22|23|24|25|26|27|28|29|30|31|32|33|34|35|36|37|38|39|40|41|42|43|44|45|46|47|48|49|50|51|52|53|54|55|56|57|58|59|60|61|62|63|64|65|66|67|68|69|70|71|72|73|75|76|77|78|79|80|82|83|89|90|91|92|93|94|95|96|97|98|99|100|101|102|103|104|117|118|119|120|121|128|130|131|132|133|134|135|136|137|138|140|141|142|143|144|145|146|147|148|149|150|151|152|153|154|155|156|157|158|159|160|161|162|163|164|165|166|167|168|170|171|172|173|174|191|192|193|194|195|196|198|199|200|201|202|205|212|213|214|215|235|236|237|238|239|240|388|389|390|'
WHERE ID=2;
--  WFM perms
-- UPDATE permissiongroup SET permission_set='|14|20|21|22|23|24|25|26|27|28|29|30|31|32|86|87|88|128|130|132|133|134|135|136|137|138|140|141|142|143|144|145|146|147|148|149|150|151|152|153|154|155|156|157|158|159|160|161|162|163|164|165|166|167|169|170|171|172|173|187|192|198|199|233|235|'
-- WHERE id=3;
--  LocaleMgr perms
-- UPDATE permissiongroup SET permission_set='|163|164|166|167|168|169|170|171|172|173|187|199|'
-- WHERE id=4;
-- LocalizationParticipant perms
UPDATE PERMISSIONGROUP SET PERMISSION_SET='|163|164|165|166|167|168|169|170|171|172|173|174|187|195|199|200|201|225|226|245|246|253|254|261|273|283|285|291|324|325|326|327|361|362|363|364|370|373|374|386|'
WHERE ID=5;
--  Customer perms
-- UPDATE permissiongroup SET permission_set='|14|37|38|40|128|130|131|132|133|134|135|136|137|138|139|140|141|142|143|144|145|146|147|148|149|150|151|153|154|155|156|157|158|159|160|161|162|174|188|192|193|199|205|'
-- WHERE id=6;
--  VendorAdmin perms
-- UPDATE permissiongroup SET permission_set='|37|38|39|40|41|177|178|179|180|181|182|183|184|185|186|'
-- WHERE id=7;
--  VendorManager perms
-- UPDATE permissiongroup SET permission_set='|37|38|39|40|41|177|178|179|180|181|183|184|185|186|'
-- WHERE id=8;
--  VendorViewer perms
-- UPDATE permissiongroup SET permission_set='|178|181|184|'
-- WHERE id=9;

--  L10N_PROFILE
--
--  project_seq foreign key needs to be added
DROP TABLE IF EXISTS L10N_PROFILE CASCADE;
CREATE TABLE L10N_PROFILE
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  NAME VARCHAR(60)
     NOT NULL,
  DESCRIPTION VARCHAR(4000),
  PRIORITY INT(3)
     NOT NULL,
  SOURCE_LOCALE_ID BIGINT
     NOT NULL,
  PROJECT_ID BIGINT
     NOT NULL,
  IS_AUTO_DISPATCH CHAR(1)
     NOT NULL
     CHECK (IS_AUTO_DISPATCH IN ('Y', 'N')),
  USE_MT_ON_JOB_CREATION CHAR(1)
     NOT NULL DEFAULT 'Y'
     CHECK (USE_MT_ON_JOB_CREATION IN ('Y', 'N')),
  TIMESTAMP DATETIME
     NOT NULL,
  DISPATCH_CONDITION INT(1)
     NOT NULL
     CHECK (DISPATCH_CONDITION IN (0, 1, 2)),
  DISPATCH_WORD_COUNT INT(10),
  DISPATCH_INTERVAL INT(10),
  DISPATCH_TIME_UNIT INT(1),
  DISPATCH_ABSOLUTE_DAYS VARCHAR(20),
  DISPATCH_TIMER_TYPE CHAR(1)
     CHECK (DISPATCH_TIMER_TYPE IN ('A', 'R')),
  DISPATCH_START_TIME DATETIME,
  IS_SCRIPT_RUN_AT_JOB_CREATION CHAR(1)
     NOT NULL
     CHECK (IS_SCRIPT_RUN_AT_JOB_CREATION IN ('Y', 'N')),
  JOB_CREATION_SCRIPT_NAME VARCHAR(2000),
  TM_CHOICE INT(1)
     NOT NULL
     CHECK (TM_CHOICE IN (0, 1, 2, 3)),
  IS_EXACT_MATCH_EDIT CHAR(1) DEFAULT 'N',
  TM_EDIT_TYPE INT(1) DEFAULT 2,
  JOB_EXCLUDE_TU_TYPES VARCHAR(2000),
  WF_STATE_POST_ID BIGINT(20) DEFAULT -1,
  IS_ACTIVE CHAR(1)
     NOT NULL
     CHECK (IS_ACTIVE IN ('Y','N')),
  COMPANYID BIGINT
     NOT NULL,
  CONSTRAINT FK_L10N_PROFILE_SOURCE_LOCALE_ID FOREIGN KEY (SOURCE_LOCALE_ID) REFERENCES LOCALE(ID),
  CONSTRAINT FK_L10N_PROFILE_PROJECT_ID FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(PROJECT_SEQ),
  CONSTRAINT FK_L10N_PROFILE_COMPANYID FOREIGN KEY (COMPANYID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;


--  JOB
--
DROP TABLE IF EXISTS JOB CASCADE;
CREATE TABLE JOB
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  NAME VARCHAR(320)
     NOT NULL,
  STATE VARCHAR(40)
     CHECK (STATE IN ('BATCH_RESERVED','PENDING','DISPATCHED','LOCALIZED',
                      'EXPORTED','EXPORT_FAILED', 'CANCELLED', 'IMPORT_FAILED',
                      'READY_TO_BE_DISPATCHED', 'ARCHIVED', 'ADDING_FILES',
                      'UPLOADING', 'IN_QUEUE', 'EXTRACTING', 'LEVERAGING', 'PROCESSING')),
  ORIGINAL_STATE VARCHAR(40),
  SOURCE_LOCALE_ID BIGINT NOT NULL,
  CREATE_DATE DATETIME
     NOT NULL,
  PRIORITY INT(3)
     NOT NULL,
  IS_WORDCOUNT_REACHED CHAR(1)
     NOT NULL
     CHECK (IS_WORDCOUNT_REACHED IN ('Y','N')),
  `TIMESTAMP` DATETIME
     NOT NULL,
  PAGE_COUNT INT(10)
     NOT NULL,
  LEVERAGE_MATCH_THRESHOLD INT DEFAULT 75,
  OVERRIDEN_WORD_COUNT INT(10),
  QUOTE_DATE VARCHAR(320),
  QUOTE_PO_NUMBER VARCHAR(320),
  QUOTE_APPROVED_DATE VARCHAR(320),
  COMPANY_ID BIGINT
     NOT NULL,
  L10N_PROFILE_ID BIGINT DEFAULT -1,
  AUTHORISER_USER_ID VARCHAR(80),
  CREATE_USER_ID VARCHAR(80),
  UUID VARCHAR(320),
  LEVERAGE_OPTION VARCHAR(45) NOT NULL DEFAULT 'in-context',
  START_DATE DATETIME,
  COMPLETED_DATE DATETIME,
  TU_TABLE VARCHAR(128),
  TU_ARCHIVE_TABLE VARCHAR(128),
  TUV_TABLE VARCHAR(128),
  TUV_ARCHIVE_TABLE VARCHAR(128),
  LM_TABLE VARCHAR(128),
  LM_ARCHIVE_TABLE VARCHAR(128),
  LM_EXT_TABLE VARCHAR(128),
  LM_EXT_ARCHIVE_TABLE VARCHAR(128),
  IS_MIGRATED CHAR(1) DEFAULT 'N',
  IS_ALL_REQUEST_GENERATED CHAR(1) DEFAULT 'N',
  JOB_TYPE VARCHAR(30),
  CONSTRAINT FK_JOB_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;


DROP TABLE IF EXISTS JOB_GROUP CASCADE;
CREATE TABLE JOB_GROUP
(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  NAME VARCHAR(320) NOT NULL,
  PROJECT_ID BIGINT NOT NULL,
  SOURCE_LOCALE_ID BIGINT NOT NULL,
  COMPANY_ID BIGINT NOT NULL,
  `TIMESTAMP` DATETIME NOT NULL,
  `CREATE_USER_ID` VARCHAR(300),
  STRING_COLUM1 VARCHAR(320),
  STRING_COLUM2 VARCHAR(320),
  LONG_COLUM1 BIGINT,
  LONG_COLUM2 BIGINT,
  DATE_COLUM1 DATETIME,
  DATE_COLUM2 DATETIME,
  CONSTRAINT FR_KEY_PROJECT_ID FOREIGN KEY(PROJECT_ID) REFERENCES PROJECT(PROJECT_SEQ),
  CONSTRAINT FR_KEY_SOURCE_LOCALE_ID FOREIGN KEY(SOURCE_LOCALE_ID) REFERENCES LOCALE(ID),
  CONSTRAINT FR_KEY_COMPANY_ID FOREIGN KEY(COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1;

ALTER TABLE JOB ADD GROUP_ID BIGINT(20);

--  REQUEST
--
DROP TABLE IF EXISTS REQUEST CASCADE;
CREATE TABLE REQUEST
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  L10N_PROFILE_ID BIGINT
     NOT NULL,
  TYPE VARCHAR(35)
     NOT NULL
     CHECK (TYPE IN ( 'EXTRACTED_LOCALIZATION_REQUEST',
                      'UNEXTRACTED_LOCALIZATION_REQUEST',
                      'REQUEST_WITH_CXE_ERROR',
                      'REQUEST_WITH_IMPORT_ERROR')),
  EVENT_FLOW_XML MEDIUMTEXT,
  EXCEPTION_XML TEXT,
  JOB_ID BIGINT,
  PAGE_ID BIGINT,
  DATA_SOURCE_ID INT
     NOT NULL,
  IS_PAGE_CXE_PREVIEWABLE CHAR(1)
     NOT NULL
     CHECK (IS_PAGE_CXE_PREVIEWABLE IN ('Y','N')),
  BATCH_ID VARCHAR(400),
  BATCH_PAGE_COUNT INT(5),
  BATCH_PAGE_NUMBER INT(5),
  BATCH_DOC_PAGE_COUNT INT(5),
  BATCH_DOC_PAGE_NUMBER INT(5),
  BATCH_JOB_NAME VARCHAR(320),
  BASE_HREF VARCHAR(2000),
  `TIMESTAMP` DATETIME
     NOT NULL,
  COMPANY_ID BIGINT
      NOT NULL,
  CONSTRAINT FK_REQUEST_L10N_PROFILE_ID FOREIGN KEY (L10N_PROFILE_ID) REFERENCES L10N_PROFILE(ID),
  CONSTRAINT FK_REQUEST_JOB_ID FOREIGN KEY (JOB_ID) REFERENCES JOB(ID),
  CONSTRAINT FK_REQUEST_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;

--  COST
--
DROP TABLE IF EXISTS COST CASCADE;
CREATE TABLE COST
(
   ID BIGINT
      AUTO_INCREMENT
      PRIMARY KEY,
   COSTABLE_OBJECT_ID INT
      NOT NULL,
   COSTABLE_OBJECT_TYPE CHAR(1)
      CHECK (COSTABLE_OBJECT_TYPE IN ('J','W','T')),
   RATE_TYPE CHAR(1)
      CHECK (RATE_TYPE IN ('E','R')),
   ESTIMATED_COST FLOAT
      NOT NULL,
   NO_USE_ESTIMATED_COST FLOAT
      NOT NULL,
   DEFAULT_CONTEXT_ESTIMATED_COST FLOAT
      NOT NULL,
   ACTUAL_COST FLOAT,
   FINAL_COST FLOAT,
   OVERRIDE_COST FLOAT,
   CURRENCY_CONVERSION_ID BIGINT
      NOT NULL,
   UNIQUE(COSTABLE_OBJECT_ID, COSTABLE_OBJECT_TYPE, RATE_TYPE),
   CONSTRAINT FK_COST_CURRENCY_CONVERSION_ID FOREIGN KEY (CURRENCY_CONVERSION_ID) REFERENCES CURRENCY_CONVERSION(ID)
) AUTO_INCREMENT = 1000;

--  SURCHARGE
--
DROP TABLE IF EXISTS SURCHARGE CASCADE;
CREATE TABLE SURCHARGE
(
   ID BIGINT
      AUTO_INCREMENT
      PRIMARY KEY,
   TYPE CHAR(1)
      NOT NULL
      CHECK (TYPE IN ('F','P')),
   NAME VARCHAR(40)
      NOT NULL,
   CURRENCY_CONV_ID BIGINT,
   AMOUNT FLOAT
      NOT NULL,
   COST_ID BIGINT,
   CONSTRAINT FK_SURCHARGE_CURRENCY_CONV_ID FOREIGN KEY (CURRENCY_CONV_ID) REFERENCES CURRENCY_CONVERSION(ID),
   CONSTRAINT FK_SURCHARGE_COST_ID FOREIGN KEY (COST_ID) REFERENCES COST(ID)
) AUTO_INCREMENT = 1000;


--  Creates a new table to handle object (task,workflow,job)
--  related costs based on word count
DROP TABLE IF EXISTS COST_BY_WORD_COUNT CASCADE;
CREATE TABLE COST_BY_WORD_COUNT
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  COST_ID BIGINT NOT NULL,
  REPETITION_COST FLOAT NOT NULL,
  EXACT_CONTEXT_COST FLOAT NOT NULL,
  EXACT_SEGMENT_TM_COST FLOAT NOT NULL,
  FUZZY_LOW_COST FLOAT NOT NULL,
  FUZZY_MED_COST FLOAT NOT NULL,
  FUZZY_MED_HI_COST FLOAT NOT NULL,
  FUZZY_HI_COST FLOAT NOT NULL,
  NO_MATCH_COST FLOAT NOT NULL,
  IN_CONTEXT_COST FLOAT NOT NULL,
  NO_USE_IN_CONTEXT_COST FLOAT NOT NULL,
  NO_USE_EXACT_COST FLOAT NOT NULL,
  DEFAULT_CONTEXT_EXACT_COST FLOAT NOT NULL,
  CONSTRAINT FK_COST_BY_WORD_COUNT_COST_ID FOREIGN KEY (COST_ID) REFERENCES COST(ID)
) AUTO_INCREMENT = 1000;



--  WORKFLOW
--
DROP TABLE IF EXISTS WORKFLOW CASCADE;
CREATE TABLE WORKFLOW
(
  IFLOW_INSTANCE_ID BIGINT(20)
     PRIMARY KEY,
  STATE VARCHAR(40)
     CHECK (STATE IN ('PENDING','DISPATCHED','LOCALIZED',
                    'EXPORTED','EXPORT_FAILED', 'CANCELLED', 'IMPORT_FAILED',
                    'READY_TO_BE_DISPATCHED', 'ARCHIVED')),
  TARGET_LOCALE_ID BIGINT
     NOT NULL,
  JOB_ID BIGINT
     NOT NULL,
  TYPE VARCHAR(20)
     NOT NULL
     CHECK (TYPE IN ('TRANS', 'DTP')),
  DISPATCH_DATE DATETIME,
  ESTIMATED_COMPLETION_DATE DATETIME,
  COMPLETED_DATE DATETIME,
  EXPORT_DATE DATETIME,
  FRACTION VARCHAR(25)
     NOT NULL,
  DURATION BIGINT(20),
  `TIMESTAMP` DATETIME
     NOT NULL,
  PLANNED_COMPLETION_DATE DATETIME,
  TOTAL_EXACT_MATCH_WORD_COUNT INT(10),
  IN_CONTEXT_MATCH_WORD_COUNT INT(10),
  MT_EXACT_MATCH_WORD_COUNT INT(10),
  EXACT_SEGMENT_TM_WORD_COUNT INT(10),
  EXACT_CONTEXT_WORD_COUNT INT(10),
  FUZZY_LOW_WORD_COUNT INT(10),
  FUZZY_MED_WORD_COUNT INT(10),
  FUZZY_MED_HI_WORD_COUNT INT(10),
  FUZZY_HI_WORD_COUNT INT(10),
  NO_MATCH_WORD_COUNT INT(10),
  REPETITION_WORD_COUNT INT(10),
  MT_TOTAL_WORD_COUNT INT(10) DEFAULT 0,
  MT_FUZZY_NO_MATCH_WORD_COUNT INT(10) DEFAULT 0,
  MT_REPETITIONS INT(10) DEFAULT 0,
  MT_ENGINE_WORD_COUNT INT(10) DEFAULT 0,
  THRESHOLD_FUZZY_HI_WORD_COUNT INT(10),
  THRESHOLD_FUZZY_MED_HI_WORD_COUNT INT(10),
  THRESHOLD_FUZZY_MED_WORD_COUNT INT(10),
  THRESHOLD_FUZZY_LOW_WORD_COUNT INT(10),
  THRESHOLD_NO_MATCH_WORD_COUNT INT(10),
  TOTAL_WORD_COUNT INT(10),
  IS_ESTI_CMPLTN_DATE_OVERRIDED CHAR(1),
  ESTI_TRANSLATE_CMPLTN_DATE DATETIME,
  IS_ESTI_TRANS_DATE_OVERRIDED CHAR(1),
  TRANSLATION_COMPLETED_DATE DATETIME,
  COMPANY_ID BIGINT
     NOT NULL,
  NO_USE_IC_MATCH_WORD_COUNT INT(10),
  USE_MT CHAR(1) DEFAULT 'N',
  MT_PROFILE_NAME VARCHAR(60) DEFAULT NULL,
  MT_THRESHOLD INT DEFAULT 0,
  PRIORITY INT(3) NOT NULL DEFAULT 3,
  SCORECARD_COMMENT VARCHAR(500),
  SCORECARD_SHOWTYPE INTEGER DEFAULT '-1',
  IS_SINCE_8_7 CHAR(1) DEFAULT 'Y',
  CONSTRAINT FK_WORKFLOW_TARGET_LOCALE_ID FOREIGN KEY (TARGET_LOCALE_ID) REFERENCES LOCALE(ID),
  CONSTRAINT FK_WORKFLOW_JOB_ID FOREIGN KEY (JOB_ID) REFERENCES JOB(ID),
  CONSTRAINT FK_WORKFLOW_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS WORKFLOW_EXPORTING CASCADE;
CREATE TABLE WORKFLOW_EXPORTING
(
   ID BIGINT
      AUTO_INCREMENT
      PRIMARY KEY,
   WORKFLOW_ID BIGINT
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS WORKFLOW_STATE_POSTS CASCADE;
CREATE TABLE `WORKFLOW_STATE_POSTS` (
  `ID` BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(40) NOT NULL,
  `DESCRIPTION` VARCHAR(4000) DEFAULT NULL,
  `LISTENER_URL` VARCHAR(100) NOT NULL,
  `SECRET_KEY` VARCHAR(100) DEFAULT NULL,
  `TIMEOUT_PERIOD` INT(3) DEFAULT NULL,
  `RETRY_NUMBER` INT(3) DEFAULT NULL,
  `NOTIFY_EMAIL` VARCHAR(100) DEFAULT NULL,
  `COMPANY_ID` BIGINT(20) DEFAULT NULL,
  `POST_JOB_CHANGE` VARCHAR(1) DEFAULT 'N',
  PRIMARY KEY (`ID`)
) ENGINE=INNODB AUTO_INCREMENT=1 DEFAULT CHARSET=UTF8;

--  CATEGORY_SCORECARD table
--
DROP TABLE IF EXISTS CATEGORY_SCORECARD CASCADE;
CREATE TABLE CATEGORY_SCORECARD(
  ID BIGINT(20) NOT NULL AUTO_INCREMENT,
  SCORECARD_CATEGORY VARCHAR(200) DEFAULT NULL,
  IS_ACTIVE CHAR(1) NOT NULL DEFAULT 'Y',
  COMPANY_ID BIGINT(20) NOT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT FK_SCORE_CARD_CATEGORY_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES company (ID)
);

--  score table
--
DROP TABLE IF EXISTS SCORECARD_SCORE CASCADE;
CREATE TABLE SCORECARD_SCORE(
  ID BIGINT(20) NOT NULL AUTO_INCREMENT,
  SCORECARD_CATEGORY VARCHAR(200),
  SCORE INT,
  WORKFLOW_ID BIGINT(20) NOT NULL,
  JOB_ID BIGINT(20) NOT NULL,
  COMPANY_ID BIGINT(20) NOT NULL,
  MODIFY_USER_ID VARCHAR(300) NOT NULL,
  IS_ACTIVE CHAR(1) DEFAULT 'Y' NOT NULL,
  PRIMARY KEY (ID),
  CONSTRAINT FK_SCORE_WORKFLOW FOREIGN KEY (WORKFLOW_ID) REFERENCES workflow(IFLOW_INSTANCE_ID),
  CONSTRAINT FK_SCORE_COMPANY FOREIGN KEY (COMPANY_ID) REFERENCES company (ID)
);

--  workflow_owner table
--
DROP TABLE IF EXISTS WORKFLOW_OWNER CASCADE;
CREATE TABLE WORKFLOW_OWNER
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  WORKFLOW_ID BIGINT(20)
     NOT NULL,
  OWNER_ID VARCHAR(80)
     NOT NULL,
  OWNER_TYPE VARCHAR(20)
     NOT NULL
     CHECK (OWNER_TYPE IN ('PROJECTMANAGER','WORKFLOWMANAGER')),
  CONSTRAINT FK_WORKFLOW_OWNER_WORKFLOW_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES WORKFLOW(IFLOW_INSTANCE_ID)
) AUTO_INCREMENT = 1000;

--  TASK_INTERIM
--
DROP TABLE IF EXISTS TASK_INTERIM CASCADE;
CREATE TABLE TASK_INTERIM
(
  ID BIGINT AUTO_INCREMENT PRIMARY KEY,
  TASK_ID BIGINT,
  ACTIVITY_NAME VARCHAR(40),
  STATE VARCHAR(50) NOT NULL CHECK(STATE IN ('ACTIVE','ACCEPTED','TRIGGERED')),
  USER_ID VARCHAR(80) NOT NULL
) AUTO_INCREMENT = 1000;

--  TASK_INFO
--
DROP TABLE IF EXISTS TASK_INFO CASCADE;
CREATE TABLE TASK_INFO
(
  TASK_ID BIGINT
     PRIMARY KEY,
  WORKFLOW_ID BIGINT(20)
     NOT NULL,
  NAME VARCHAR(64)
     NOT NULL,
  STATE VARCHAR(50)
     NOT NULL
     CHECK(STATE IN ('ACTIVE', 'ACCEPTED', 'DISPATCHED_TO_TRANSLATION', 'IN_TRANSLATION', 'TRANSLATION_COMPLETED', 'COMPLETED', 'DEACTIVE', 'FINISHING')),
  ESTIMATED_ACCEPTANCE_DATE DATETIME,
  ESTIMATED_COMPLETION_DATE DATETIME,
  ACCEPTED_DATE DATETIME,
  COMPLETED_DATE DATETIME,
  EXPENSE_RATE_ID BIGINT,
  REVENUE_RATE_ID BIGINT,
  STF_CREATION_STATE VARCHAR(20)
     CHECK (STF_CREATION_STATE IN ('IN_PROGRESS', 'COMPLETED', 'FAILED')),
  USER_ID  VARCHAR(80),
  RATE_SELECTION_CRITERIA INT(1)
     NOT NULL
     CHECK (RATE_SELECTION_CRITERIA IN (1, 2)),
  TYPE VARCHAR(20)
     CHECK(TYPE IN ('TRANSLATE','REVIEW')),
  TASK_TYPE VARCHAR(20)
     NOT NULL
     CHECK (TASK_TYPE IN ('TRANS', 'DTP')),
  COMPANY_ID BIGINT
     NOT NULL,
  IS_UPLOADING CHAR(1) DEFAULT 'N',
  IS_REPORT_UPLOADED INTEGER DEFAULT 0,
  IS_REPORT_UPLOAD_CHECK INTEGER DEFAULT 0,
  QUALITY_ASSESSMENT VARCHAR(200) DEFAULT NULL,
  MARKET_SUITABILITY VARCHAR(200) DEFAULT NULL,
  CONSTRAINT FK_TASK_INFO_WORKFLOW_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES WORKFLOW(IFLOW_INSTANCE_ID),
  CONSTRAINT FK_TASK_INFO_EXPENSE_RATE_ID FOREIGN KEY (EXPENSE_RATE_ID) REFERENCES RATE(ID),
  CONSTRAINT FK_TASK_INFO_REVENUE_RATE_ID FOREIGN KEY (REVENUE_RATE_ID) REFERENCES RATE(ID),
  CONSTRAINT FK_TASK_INFO_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;

--  AMOUNT_OF_WORK
--
DROP TABLE IF EXISTS AMOUNT_OF_WORK CASCADE;
CREATE TABLE AMOUNT_OF_WORK
(
   ID BIGINT
      AUTO_INCREMENT
      PRIMARY KEY,
   UOW CHAR(1)
      NOT NULL
      CHECK (UOW IN ('W','F','P','H')),
   ESTIMATED_AMOUNT FLOAT
      NOT NULL,
   ACTUAL_AMOUNT FLOAT,
   TASK_ID BIGINT
      NOT NULL,
   CONSTRAINT FK_AMOUNT_OF_WORK_TASK_ID FOREIGN KEY (TASK_ID) REFERENCES TASK_INFO(TASK_ID)
) AUTO_INCREMENT = 1000;

--  COMMENTS
--
DROP TABLE IF EXISTS COMMENTS CASCADE;
CREATE TABLE COMMENTS
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  CREATE_DATE DATETIME
     NOT NULL,
  CREATOR_USER_ID VARCHAR(80)
     NOT NULL,
  COMMENT_TEXT VARCHAR(4000),
  COMMENT_OBJECT_ID BIGINT
     NOT NULL,
  COMMENT_OBJECT_TYPE CHAR(1) DEFAULT 'T'
     NOT NULL
     CHECK (COMMENT_OBJECT_TYPE IN ('J', 'T', 'S'))
) AUTO_INCREMENT = 1000;

--  ISSUE
--
DROP TABLE IF EXISTS ISSUE CASCADE;
CREATE TABLE ISSUE
(
   ID BIGINT
      AUTO_INCREMENT
      PRIMARY KEY,
   ISSUE_OBJECT_ID BIGINT
      NOT NULL,
   ISSUE_OBJECT_TYPE CHAR(1) DEFAULT 'S'
      NOT NULL
      CHECK (ISSUE_OBJECT_TYPE IN ('S')),
   CREATE_DATE DATETIME
      NOT NULL,
   CREATOR_USER_ID VARCHAR(80)
      NOT NULL,
   TITLE VARCHAR(200)
      NOT NULL,
   PRIORITY CHAR(1)
      NOT NULL
      CHECK (PRIORITY IN ('U','H','M','L')),
   STATUS VARCHAR(20) DEFAULT 'OPEN'
      NOT NULL
      CHECK (STATUS IN ('OPEN','CLOSED','QUERY')),
   LOGICAL_KEY VARCHAR(200),
   TARGET_PAGE_ID BIGINT DEFAULT 0,
   SHARE CHAR(1) NOT NULL CHECK(SHARE IN ('Y','N')),
   OVERWRITE CHAR(1) NOT NULL CHECK(OVERWRITE IN ('Y','N')),
   CATEGORY VARCHAR(100) DEFAULT 'TYPE01'
      NOT NULL
) AUTO_INCREMENT = 1000;

--  ISSUE HISTORY
--
DROP TABLE IF EXISTS ISSUE_HISTORY CASCADE;
CREATE TABLE ISSUE_HISTORY
(
   ID BIGINT
      AUTO_INCREMENT
      PRIMARY KEY,
   ISSUE_ID BIGINT,
   REPORTED_DATE DATETIME
      NOT NULL,
   REPORTED_BY VARCHAR(80)
      NOT NULL,
   DESCRIPTION VARCHAR(4000),
   CONSTRAINT FK_ISSUE_HISTORY_ISSUE_ID FOREIGN KEY (ISSUE_ID) REFERENCES ISSUE(ID)
)  AUTO_INCREMENT = 1000;


--  Export_Batch_Event
--
DROP TABLE IF EXISTS EXPORT_BATCH_EVENT CASCADE;
CREATE TABLE EXPORT_BATCH_EVENT
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  JOB_ID BIGINT
     NOT NULL,
  TASK_ID BIGINT,
  RESPONSIBLE_USER_ID VARCHAR(80)
     NOT NULL,
  EXPORT_TYPE VARCHAR(20)
     NOT NULL
     CHECK (EXPORT_TYPE IN ('INTERIM_PRIMARY','FINAL_PRIMARY','INTERIM_SECONDARY',
      'FINAL_SECONDARY','CREATE_STF','EXPORT_SOURCE')),
  START_TIME BIGINT
     NOT NULL,
  END_TIME BIGINT,
  CONSTRAINT FK_EXPORT_BATCH_EVENT_JOB_ID FOREIGN KEY (JOB_ID) REFERENCES JOB(ID),
  CONSTRAINT FK_EXPORT_BATCH_EVENT_TASK_ID FOREIGN KEY (TASK_ID) REFERENCES TASK_INFO(TASK_ID)
) AUTO_INCREMENT = 1000;


--  ExportBatch_Workflow
--
DROP TABLE IF EXISTS EXPORTBATCH_WORKFLOW CASCADE;
CREATE TABLE EXPORTBATCH_WORKFLOW
(
  EXPORT_BATCH_ID BIGINT
    NOT NULL,
  WORKFLOW_ID BIGINT(20)
    NOT NULL,
  PRIMARY KEY (EXPORT_BATCH_ID, WORKFLOW_ID),
  CONSTRAINT FK_EXPORTBATCH_WORKFLOW_EXPORT_BATCH_ID FOREIGN KEY (EXPORT_BATCH_ID) REFERENCES EXPORT_BATCH_EVENT(ID),
  CONSTRAINT FK_EXPORTBATCH_WORKFLOW_WORKFLOW_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES WORKFLOW(IFLOW_INSTANCE_ID)
);


--  Exporting_Page
--
DROP TABLE IF EXISTS EXPORTING_PAGE CASCADE;
CREATE TABLE EXPORTING_PAGE
(
  ID BIGINT
    AUTO_INCREMENT
    PRIMARY KEY,
  PAGE_ID INT
    NOT NULL,
  PAGE_TYPE VARCHAR(20)
    NOT NULL
    CHECK (PAGE_TYPE IN ('SOURCE','PRIMARY_TARGET','SECONDARY_TARGET')),
  EXPORT_BATCH_ID BIGINT
    NOT NULL,
  STATE VARCHAR(20)
    NOT NULL
    CHECK (STATE IN ('EXPORTED','EXPORT_IN_PROGRESS','EXPORT_FAIL')),
  ERROR_MESSAGE TEXT,
  END_TIME BIGINT,
  EXPORT_PATH VARCHAR(4000),
  IS_COMPONENT_PAGE CHAR(1) DEFAULT 'N'
    NOT NULL
    CHECK (IS_COMPONENT_PAGE IN ('Y', 'N')),
  CONSTRAINT FK_EXPORTING_PAGE_EXPORT_BATCH_ID FOREIGN KEY (EXPORT_BATCH_ID) REFERENCES EXPORT_BATCH_EVENT(ID)
) AUTO_INCREMENT = 1000;


--  WORKFLOW_TEMPLATE
--
DROP TABLE IF EXISTS WORKFLOW_TEMPLATE CASCADE;
CREATE TABLE WORKFLOW_TEMPLATE
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  NAME VARCHAR(60)
     NOT NULL,
  DESCRIPTION VARCHAR(200),
  PROJECT_ID BIGINT
     NOT NULL,
  SOURCE_LOCALE_ID BIGINT
     NOT NULL,
  TARGET_LOCALE_ID BIGINT
     NOT NULL,
  CHAR_SET VARCHAR(30),
  IFLOW_TEMPLATE_ID INT
     NOT NULL,
  IS_ACTIVE CHAR(1)
     NOT NULL
     CHECK (IS_ACTIVE IN ('Y','N')),
  NOTIFY_PM CHAR(1)
     NOT NULL
     CHECK (NOTIFY_PM IN ('Y','N')),
  TYPE VARCHAR(20)
     NOT NULL
     CHECK(TYPE IN ('TRANS','DTP')),
  COMPANYID BIGINT
     NOT NULL,
  SCORECARD_SHOWTYPE INTEGER DEFAULT '-1',
  CONSTRAINT FK_WORKFLOW_TEMPLATE_PROJECT_ID FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT(PROJECT_SEQ),
  CONSTRAINT FK_WORKFLOW_TEMPLATE_SOURCE_LOCALE_ID FOREIGN KEY (SOURCE_LOCALE_ID) REFERENCES LOCALE(ID),
  CONSTRAINT FK_WORKFLOW_TEMPLATE_TARGET_LOCALE_ID FOREIGN KEY (TARGET_LOCALE_ID) REFERENCES LOCALE(ID),
  CONSTRAINT FK_WORKFLOW_TEMPLATE_COMPANYID FOREIGN KEY (COMPANYID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS WF_TEMPLATE_WF_MANAGER CASCADE;
CREATE TABLE WF_TEMPLATE_WF_MANAGER
(
  WORKFLOW_TEMPLATE_ID BIGINT
     NOT NULL,
  WORKFLOW_MANAGER_ID VARCHAR(80)
     NOT NULL,
  PRIMARY KEY(WORKFLOW_TEMPLATE_ID, WORKFLOW_MANAGER_ID),
  CONSTRAINT FK_WF_TEMPLATE_WF_MANAGER_WORKFLOW_TEMPLATE_ID FOREIGN KEY (WORKFLOW_TEMPLATE_ID) REFERENCES WORKFLOW_TEMPLATE(ID)
);

--  L10N_PROFILE_WFTEMPLATE_INFO
--
DROP TABLE IF EXISTS L10N_PROFILE_WFTEMPLATE_INFO CASCADE;
CREATE TABLE L10N_PROFILE_WFTEMPLATE_INFO
(
  L10N_PROFILE_ID BIGINT,
  WF_TEMPLATE_ID BIGINT,
  IS_ACTIVE CHAR(1) NOT NULL default 'Y',
  CHECK (IS_ACTIVE IN ('Y', 'N')),
  MT_PROFILE_ID BIGINT DEFAULT -1,
  PRIMARY KEY(L10N_PROFILE_ID, WF_TEMPLATE_ID),
  CONSTRAINT FK_L10N_PROFILE_WFTEMPLATE_INFO_L10N_PROFILE_ID FOREIGN KEY (L10N_PROFILE_ID) REFERENCES L10N_PROFILE(ID),
  CONSTRAINT FK_L10N_PROFILE_WFTEMPLATE_INFO_WF_TEMPLATE_ID FOREIGN KEY (WF_TEMPLATE_ID) REFERENCES WORKFLOW_TEMPLATE(ID)
);

DROP TABLE IF EXISTS WORKFLOW_REQUEST CASCADE;
CREATE TABLE WORKFLOW_REQUEST
(
  ID BIGINT
    AUTO_INCREMENT
    PRIMARY KEY,
  JOB_ID BIGINT,
  TYPE VARCHAR(100)
    NOT NULL
    CHECK (TYPE IN ('ADD_WORKFLOW_REQUEST_TO_EXISTING_JOB',
                      'WORKFLOW_REQUEST_FAILURE')),
  EXCEPTION_XML TEXT,
  CONSTRAINT FK_WORKFLOW_REQUEST_JOB_ID FOREIGN KEY (JOB_ID) REFERENCES JOB(ID)
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS WORKFLOW_REQUEST_WFTEMPLATE CASCADE;
CREATE TABLE WORKFLOW_REQUEST_WFTEMPLATE
(
  WORKFLOW_REQUEST_ID BIGINT,
  WORKFLOW_TEMPLATE_ID BIGINT,
  PRIMARY KEY (WORKFLOW_REQUEST_ID, WORKFLOW_TEMPLATE_ID),
  CONSTRAINT FK_WORKFLOW_REQUEST_WFTEMPLATE_WORKFLOW_REQUEST_ID FOREIGN KEY (WORKFLOW_REQUEST_ID) REFERENCES WORKFLOW_REQUEST(ID),
  CONSTRAINT FK_WORKFLOW_REQUEST_WFTEMPLATE_WORKFLOW_TEMPLATE_ID FOREIGN KEY (WORKFLOW_TEMPLATE_ID) REFERENCES WORKFLOW_TEMPLATE(ID)
);

--  LEVERAGE_LOCALES
--
DROP TABLE IF EXISTS LEVERAGE_LOCALES CASCADE;
CREATE TABLE LEVERAGE_LOCALES
(
  WORKFLOW_INFO_ID BIGINT,
  LOCALE_ID BIGINT
     NOT NULL,
  IS_ACTIVE CHAR(1)
     NOT NULL
     CHECK (IS_ACTIVE IN ('Y','N')),
  PRIMARY KEY (WORKFLOW_INFO_ID, LOCALE_ID),
  CONSTRAINT FK_LEVERAGE_LOCALES_WORKFLOW_INFO_ID FOREIGN KEY (WORKFLOW_INFO_ID) REFERENCES WORKFLOW_TEMPLATE(ID),
  CONSTRAINT FK_LEVERAGE_LOCALES_LOCALE_ID FOREIGN KEY (LOCALE_ID) REFERENCES LOCALE(ID)
);


--  L10N_PROFILE_VERSION
--
DROP TABLE IF EXISTS L10N_PROFILE_VERSION CASCADE;
CREATE TABLE L10N_PROFILE_VERSION
(
  VERSION_SEQ BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  ORIGINAL_PROFILE_SEQ BIGINT
     NOT NULL,
  MODIFIED_PROFILE_SEQ BIGINT
     NOT NULL,
  CONSTRAINT FK_L10N_PROFILE_VERSION_ORIGINAL_PROFILE_SEQ FOREIGN KEY (ORIGINAL_PROFILE_SEQ) REFERENCES L10N_PROFILE(ID),
  CONSTRAINT FK_L10N_PROFILE_VERSION_MODIFIED_PROFILE_SEQ FOREIGN KEY (MODIFIED_PROFILE_SEQ) REFERENCES L10N_PROFILE(ID)
) AUTO_INCREMENT = 1000;

--  New tables for Project TM, Translation Memory Profiles
DROP TABLE IF EXISTS PROJECT_TM CASCADE;
CREATE TABLE PROJECT_TM
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  NAME VARCHAR(60) NOT NULL,
  DOMAIN VARCHAR(500),
  ORGANIZATION VARCHAR(400),
  DESCRIPTION VARCHAR(500),
  INDEX_TARGET char(1) DEFAULT 'N' CHECK (INDEX_TARGET_LOCALES IN('Y', 'N')),
  TM3_ID  bigint,
  CREATION_DATE DATETIME,
  CREATION_USER VARCHAR(80),
  COMPANY_ID BIGINT NOT NULL,
  IS_REMOTE_TM char(1) DEFAULT 'N' CHECK (IS_REMOTE_TM IN('Y', 'N')),
  REMOTE_TM_PROFILE_ID bigint(20) DEFAULT '-1',
  REMOTE_TM_PROFILE_NAME varchar(60) DEFAULT NULL,
  CONVERT_RATE SMALLINT DEFAULT 0,
  LAST_TU_ID INTEGER DEFAULT '-1',
  STATUS VARCHAR(50) DEFAULT '',
  CONVERTED_TM3_ID INTEGER DEFAULT '-1',
  UNIQUE(NAME, COMPANY_ID),
  CONSTRAINT FK_PROJECT_TM_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS TM_PROFILE CASCADE;
CREATE TABLE TM_PROFILE
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  NAME VARCHAR(60)
     NOT NULL,
  DESCRIPTION VARCHAR(500),
  PROJECT_TM_ID_FOR_SAVE BIGINT
     NOT NULL,
  IS_UNLOC_SEG_SAVED_TO_PROJ_TM CHAR(1)
     NOT NULL
     CHECK (IS_UNLOC_SEG_SAVED_TO_PROJ_TM IN('Y', 'N')),
  IS_LOC_SEG_SAVED_TO_PROJ_TM CHAR(1)
     NOT NULL
     CHECK (IS_LOC_SEG_SAVED_TO_PROJ_TM IN('Y', 'N')),
  IS_MTED_SEG_SAVED_TO_PROJ_TM CHAR(1) DEFAULT 'Y'
     NOT NULL
     CHECK (IS_MTED_SEG_SAVED_TO_PROJ_TM IN('Y', 'N')),
  IS_WHOLLY_INTERNAL_TEXT_TO_PROJ_TM CHAR(1)
     NOT NULL
     CHECK (IS_WHOLLY_INTERNAL_TEXT_TO_PROJ_TM IN('Y', 'N')),
  IS_APPROVED_SEG_SAVED_TO_PROJ_TM CHAR(1)
     NOT NULL
     CHECK (IS_APPROVED_SEG_SAVED_TO_PROJ_TM IN('Y', 'N')),
  IS_EXACT_MATCH_SEG_SAVED_TO_PROJ_TM CHAR(1)
     NOT NULL
     CHECK (IS_EXACT_MATCH_SEG_SAVED_TO_PROJ_TM IN('Y', 'N')),
  IS_UNLOC_SEG_SAVED_TO_PAGE_TM CHAR(1)
     NOT NULL
     CHECK (IS_UNLOC_SEG_SAVED_TO_PAGE_TM IN('Y', 'N')),
  JOB_EXCLUDE_TU_TYPES VARCHAR(2000),
  IS_LEVERAGE_LOCALIZABLE CHAR(1)
     NOT NULL
     CHECK (IS_LEVERAGE_LOCALIZABLE IN('Y', 'N')),
  IS_EXACT_MATCH_LEVERAGING CHAR(1)
     NOT NULL
     CHECK (IS_EXACT_MATCH_LEVERAGING IN ('Y', 'N')),
  IS_CONTEXT_MATCH CHAR(1)
     CHECK (DYN_IS_CONTEXT_MATCH IN('Y', 'N')),
  ICE_PROMOTION_RULES INT(1) NOT NULL DEFAULT 3,
  IS_TYPE_SENSITIVE_LEVERAGING CHAR(1)
     NOT NULL
     CHECK (IS_TYPE_SENSITIVE_LEVERAGING IN('Y', 'N')),
  TYPE_DIFFERENCE_PENALTY INT,
  IS_CASE_SENSITIVE_LEVERAGING CHAR(1)
     NOT NULL
     CHECK (IS_CASE_SENSITIVE_LEVERAGING IN('Y', 'N')),
  CASE_DIFFERENCE_PENALTY INT,
  IS_WS_SENSITIVE_LEVERAGING CHAR(1)
     NOT NULL
     CHECK (IS_WS_SENSITIVE_LEVERAGING IN('Y', 'N')),
  WHITESPACE_DIFFERENCE_PENALTY INT,
  IS_CODE_SENSITIVE_LEVERAGING CHAR(1)
     NOT NULL
     CHECK (IS_CODE_SENSITIVE_LEVERAGING IN('Y', 'N')),
  CODE_DIFFERENCE_PENALTY INT,
  IS_MULTILINGUAL_LEVERAGING CHAR(1)
     NOT NULL
     CHECK (IS_MULTILINGUAL_LEVERAGING IN('Y', 'N')),
  AUTO_REPAIR CHAR(1)
     NOT NULL
     CHECK (AUTO_REPAIR IN('Y', 'N')),
  MULTIPLE_EXACT_MATCHES VARCHAR(100)
     CHECK (MULTIPLE_EXACT_MATCHES IN('LATEST', 'OLDEST', 'DEMOTED')),
  MULTIPLE_EXACT_MATCHES_PENALTY INT,
  FUZZY_MATCHES_THRESHOLD INT,
  NUMBER_OF_MATCHES_RETURNED INT,
  IS_LATEST_MATCH_FOR_REIMPORT CHAR(1)
     NOT NULL,
     CHECK (IS_LATEST_MATCH_FOR_REIMPORT IN ('Y', 'N')),
  IS_TYPE_LEV_FOR_REIMPORT CHAR(1)
     NOT NULL,
     CHECK (IS_TYPE_LEV_FOR_REIMPORT IN('Y', 'N')),
  TYPE_DIFF_PENALTY_REIMPORT INT,
  IS_MULT_MATCHES_FOR_REIMP CHAR(1)
     NOT NULL
     CHECK (IS_MULT_MATCHES_FOR_REIMP IN('Y', 'N')),
  MULTIPLE_MATCHES_PENALTY INT,
  DYN_LEV_FROM_GOLD_TM CHAR(1)
     NOT NULL
     CHECK (DYN_LEV_FROM_GOLD_TM IN('Y', 'N')),
  DYN_LEV_FROM_IN_PROGRESS_TM CHAR(1)
     NOT NULL
     CHECK (DYN_LEV_FROM_IN_PROGRESS_TM IN('Y', 'N')),
  DYN_LEV_FROM_POPULATION_TM CHAR(1)
     NOT NULL
     CHECK (DYN_LEV_FROM_POPULATION_TM IN('Y', 'N')),
  DYN_LEV_FROM_REFERENCE_TM CHAR(1)
     NOT NULL
     CHECK (DYN_LEV_FROM_REFERENCE_TM IN('Y', 'N')),
  DYN_LEV_STOP_SEARCH CHAR(1)
     NOT NULL DEFAULT 'N'
     CHECK (DYN_LEV_STOP_SEARCH IN('Y', 'N')),
  IS_MATCH_PERCENTAGE char(1) DEFAULT 'Y'
  	 CHECK(DYN_IS_MATCH_PERCENTAGE IN('Y', 'N')),
  IS_TM_PROCENDENCE char(1) DEFAULT 'N'
  	 CHECK(DYN_IS_TM_PROCENDENCE IN('Y', 'N')),
  IS_REF_TM CHAR(1) DEFAULT 'N'
  	 CHECK(DYN_IS_REF_TM IN('Y', 'N')),
  REF_TM_PENALTY INTEGER DEFAULT 0,
  REF_TMS VARCHAR(255),
  GET_UNIQUE_FROM_MULT_TRANS CHAR(1) DEFAULT 'N',
  CHOICE_IF_ATT_NOT_MATCH varchar(20),
  TU_ATT_NOT_MATCH_PENALTY int(11) DEFAULT 1,
  COMPANY_ID BIGINT DEFAULT NULL,
  CONSTRAINT FK_TM_PROFILE_PROJECT_TM_ID_FOR_SAVE FOREIGN KEY (PROJECT_TM_ID_FOR_SAVE) REFERENCES PROJECT_TM(ID)
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS TM_PROFILE_PROJECT_TM_INFO CASCADE;
CREATE TABLE TM_PROFILE_PROJECT_TM_INFO
(
  ID INT AUTO_INCREMENT PRIMARY KEY,
  TM_PROFILE_ID BIGINT,
  PROJECT_TM_ID BIGINT,
  PROJECT_TM_INDEX int(4) DEFAULT '-1',
  CONSTRAINT FK_TM_PROFILE_PROJECT_TM_INFO_TM_PROFILE_ID FOREIGN KEY (TM_PROFILE_ID) REFERENCES TM_PROFILE(ID),
  CONSTRAINT FK_TM_PROFILE_PROJECT_TM_INFO_PROJECT_TM_ID FOREIGN KEY (PROJECT_TM_ID) REFERENCES PROJECT_TM(ID)
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS L10N_PROFILE_TM_PROFILE CASCADE;
CREATE TABLE L10N_PROFILE_TM_PROFILE
(
    L10N_PROFILE_ID BIGINT,
    TM_PROFILE_ID BIGINT,
    PRIMARY KEY(L10N_PROFILE_ID, TM_PROFILE_ID),
    CONSTRAINT FK_L10N_PROFILE_TM_PROFILE_L10N_PROFILE_ID FOREIGN KEY (L10N_PROFILE_ID) REFERENCES L10N_PROFILE(ID),
    CONSTRAINT FK_L10N_PROFILE_TM_PROFILE_TM_PROFILE_ID FOREIGN KEY (TM_PROFILE_ID) REFERENCES TM_PROFILE(ID)
);

DROP TABLE IF EXISTS mt_profile CASCADE;
CREATE TABLE mt_profile (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `MT_PROFILE_NAME` varchar(60) DEFAULT NULL,
  `MT_ENGINE` varchar(60) DEFAULT NULL,
  `DESCRIPTION` varchar(200) DEFAULT NULL,
  `MT_THRESHOLD` bigint(20) DEFAULT 0,
  `URL` varchar(100) DEFAULT NULL,
  `PORT` int(11) DEFAULT NULL,
  `USERNAME` varchar(100) DEFAULT NULL,
  `PASSWORD` varchar(100) DEFAULT NULL,
  `CATEGORY` varchar(128) DEFAULT NULL,
  `ACCOUNTINFO` varchar(100) DEFAULT NULL,
  `COMPANY_ID` bigint(20) DEFAULT NULL,
  `TIMESTAMP` timestamp NULL DEFAULT NULL,
  `INCLUDE_MT_IDENTIFIERS` CHAR(1) DEFAULT 'N',
  `LOG_DEBUG_INFO` CHAR(1) DEFAULT 'N',
  `IGNORE_TM_MATCHES` CHAR(1) DEFAULT 'N',
  `MS_TRANS_TYPE` CHAR(1) DEFAULT '2',
  `MS_MAX_LENGTH` bigint(20) DEFAULT 1000,
  `MT_IDENTIFIER_LEADING` varchar(20) DEFAULT NULL,
  `MT_IDENTIFIER_TRAILING` varchar(20) DEFAULT NULL,
  `IS_ACTIVE` char(1) DEFAULT NULL,
  `EXTENT_JSON_INFO` longtext,
  PRIMARY KEY (`ID`)
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS mt_profile_extent_info CASCADE;
CREATE TABLE mt_profile_extent_info (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `MT_PROFILE_ID` bigint(20) DEFAULT NULL,
  `LANGUAGE_PAIR_CODE` bigint(20) DEFAULT NULL,
  `LANGUAGE_PAIR_NAME` varchar(100) DEFAULT NULL,
  `DOMAIN_CODE` varchar(100) DEFAULT NULL,
  PRIMARY KEY (`ID`)
)  AUTO_INCREMENT = 1000;

--  LEVERAGE_GROUP
--
DROP TABLE IF EXISTS LEVERAGE_GROUP CASCADE;
CREATE TABLE LEVERAGE_GROUP
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY
) AUTO_INCREMENT = 1000;


--  TRANSLATION_UNIT_1
--
DROP TABLE IF EXISTS TRANSLATION_UNIT_1 CASCADE;
CREATE TABLE TRANSLATION_UNIT_1
(
  ID BIGINT
     PRIMARY KEY,
  ORDER_NUM INT
     NOT NULL,
  TM_ID INT,
  DATA_TYPE VARCHAR(20),
  TU_TYPE VARCHAR(50),
  LOCALIZE_TYPE CHAR(1)
     NOT NULL
     CHECK (LOCALIZE_TYPE IN ('L','T')),
  LEVERAGE_GROUP_ID BIGINT
     NOT NULL,
  PID INT
     NOT NULL,
  SOURCE_TM_NAME VARCHAR(60),
  XLIFF_TRANSLATION_TYPE VARCHAR(60),
  XLIFF_LOCKED CHAR(1)
     NOT NULL DEFAULT 'N'
     CHECK (XLIFF_LOCKED IN ('Y', 'N')),
  IWS_SCORE VARCHAR(50),
  XLIFF_TARGET_SEGMENT MEDIUMTEXT,
  XLIFF_TARGET_LANGUAGE varchar(30) DEFAULT NULL,
  GENERATE_FROM varchar(50) DEFAULT NULL,
  SOURCE_CONTENT varchar(30) DEFAULT NULL,
  PASSOLO_STATE varchar(60) DEFAULT NULL,
  TRANSLATE varchar(12) DEFAULT NULL
) AUTO_INCREMENT = 1000;

--  TRANSLATION_UNIT_VARIANT_1
--
DROP TABLE IF EXISTS TRANSLATION_UNIT_VARIANT_1 CASCADE;
CREATE TABLE TRANSLATION_UNIT_VARIANT_1
(
  ID BIGINT
     PRIMARY KEY,
  ORDER_NUM BIGINT
     NOT NULL,
  LOCALE_ID BIGINT
     NOT NULL,
  TU_ID BIGINT
     NOT NULL,
  IS_INDEXED CHAR(1)
     NOT NULL
     CHECK (IS_INDEXED IN ('Y', 'N')),
  SEGMENT_CLOB MEDIUMTEXT,
  SEGMENT_STRING TEXT,
  WORD_COUNT INT(10),
  EXACT_MATCH_KEY BIGINT,
  STATE VARCHAR(40)
     NOT NULL
     CHECK (STATE IN ('NOT_LOCALIZED','LOCALIZED','OUT_OF_DATE',
             'COMPLETE','LEVERAGE_GROUP_EXACT_MATCH_LOCALIZED',
             'EXACT_MATCH_LOCALIZED', 'ALIGNMENT_LOCALIZED',
             'UNVERIFIED_EXACT_MATCH')),
  MERGE_STATE VARCHAR(20)
     NOT NULL
     CHECK (MERGE_STATE IN ('NOT_MERGED','MERGE_START',
                            'MERGE_MIDDLE','MERGE_END')),
  `TIMESTAMP` DATETIME
     NOT NULL,
  LAST_MODIFIED DATETIME
     NOT NULL,
  MODIFY_USER  VARCHAR(80),
  CREATION_DATE  DATETIME,
  CREATION_USER  VARCHAR(80),
  UPDATED_BY_PROJECT VARCHAR(40),
  SID VARCHAR(255),
  SRC_COMMENT TEXT,
  REPETITION_OF_ID BIGINT DEFAULT NULL,
  IS_REPEATED CHAR(1) DEFAULT 'N'
     CHECK (IS_REPEATED IN ('Y', 'N')),
  KEY `REPETITION_OF_ID` (`REPETITION_OF_ID`)
) AUTO_INCREMENT = 1000;

--  TRANSLATION_TU_TUV_ATTR_1
--
DROP TABLE IF EXISTS TRANSLATION_TU_TUV_ATTR_1 CASCADE;
CREATE TABLE TRANSLATION_TU_TUV_ATTR_1
(
  ID BIGINT(20) NOT NULL AUTO_INCREMENT,
  OBJECT_ID BIGINT(20) DEFAULT NULL,
  OBJECT_TYPE VARCHAR(20) DEFAULT NULL,
  NAME VARCHAR(100) NOT NULL,
  VARCHAR_VALUE VARCHAR(512) DEFAULT NULL,
  TEXT_VALUE TEXT,
  LONG_VALUE BIGINT(20) DEFAULT NULL,
  DATE_VALUE DATETIME DEFAULT NULL,
  PRIMARY KEY (ID),
  KEY IDX_OBJECT_ID_TYPE (OBJECT_ID, OBJECT_TYPE, NAME)
) ENGINE=INNODB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

--  LEVERAGE_MATCH_1
--
DROP TABLE IF EXISTS LEVERAGE_MATCH_1 CASCADE;
CREATE TABLE LEVERAGE_MATCH_1
(
  SOURCE_PAGE_ID INT,
  ORIGINAL_SOURCE_TUV_ID BIGINT,
  SUB_ID VARCHAR(40),
  MATCHED_TEXT_STRING TEXT,
  MATCHED_TEXT_CLOB MEDIUMTEXT,
  TARGET_LOCALE_ID BIGINT,
  MATCH_TYPE VARCHAR(80),
  ORDER_NUM SMALLINT,
  SCORE_NUM DECIMAL(8, 4) DEFAULT 0.00,
  MATCHED_TUV_ID INT,
  MATCHED_TABLE_TYPE SMALLINT DEFAULT '0',
  PROJECT_TM_INDEX int(4) DEFAULT '-1',
  TM_ID bigint(20) DEFAULT '0',
  TM_PROFILE_ID bigint(20) DEFAULT '0',
  MT_NAME VARCHAR(40),
  MATCHED_ORIGINAL_SOURCE MEDIUMTEXT,
  JOB_DATA_TU_ID BIGINT DEFAULT '-1',
  SID VARCHAR(255) DEFAULT NULL,
  CREATION_USER VARCHAR(80) DEFAULT NULL,
  CREATION_DATE DATETIME DEFAULT NULL,
  MODIFY_USER VARCHAR(80) DEFAULT NULL,
  MODIFY_DATE DATETIME NOT NULL,
  PRIMARY KEY (ORIGINAL_SOURCE_TUV_ID, SUB_ID, TARGET_LOCALE_ID, ORDER_NUM)
);

-- LEVERAGE_MATCH_ATTR_1
-- 
DROP TABLE IF EXISTS LEVERAGE_MATCH_ATTR_1 CASCADE;
CREATE TABLE LEVERAGE_MATCH_ATTR_1 (
  ID BIGINT(20) NOT NULL AUTO_INCREMENT,
  SOURCE_PAGE_ID INT(11) DEFAULT NULL,
  ORIGINAL_SOURCE_TUV_ID BIGINT(20) DEFAULT NULL,
  SUB_ID VARCHAR(40) DEFAULT NULL,
  TARGET_LOCALE_ID BIGINT(20) DEFAULT NULL,
  ORDER_NUM SMALLINT(6) DEFAULT NULL,
  NAME VARCHAR(100) NOT NULL,
  VARCHAR_VALUE VARCHAR(512) DEFAULT NULL,
  TEXT_VALUE TEXT,
  LONG_VALUE BIGINT(20) DEFAULT NULL,
  DATE_VALUE DATETIME DEFAULT NULL,
  PRIMARY KEY (ID),
  KEY IDX_4_UNIQUE_KEY (ORIGINAL_SOURCE_TUV_ID,SUB_ID,TARGET_LOCALE_ID,ORDER_NUM),
  KEY IDX_SPID_TRGLOCID (SOURCE_PAGE_ID,TARGET_LOCALE_ID)
) ENGINE=INNODB DEFAULT CHARSET=utf8;


--  TEMPLATE_FORMAT
--
DROP TABLE IF EXISTS TEMPLATE_FORMAT CASCADE;
CREATE TABLE TEMPLATE_FORMAT
(
  NAME VARCHAR(20),
  TEMPLATE_TYPE CHAR(3)
     CHECK (TEMPLATE_TYPE IN ('DTL', 'STD', 'EXP', 'PRV')),
  SOURCE_TYPE VARCHAR(4)
     CHECK (SOURCE_TYPE IN ('GXML', 'PRS')),
  TEXT VARCHAR(4000)
     NOT NULL,
  PRIMARY KEY (NAME, TEMPLATE_TYPE, SOURCE_TYPE)
);



--  SOURCE_PAGE
--
DROP TABLE IF EXISTS SOURCE_PAGE CASCADE;
CREATE TABLE SOURCE_PAGE
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  EXTERNAL_PAGE_ID VARCHAR(750)
     NOT NULL,
  WORD_COUNT INT(10),
  ORIGINAL_ENCODING VARCHAR(30),
  STATE VARCHAR(20)
     NOT NULL
     CHECK (STATE IN ('IMPORTING','IMPORT_FAIL','IMPORT_SUCCESS','OUT_OF_DATE',
                      'NOT_LOCALIZED','ACTIVE_JOB','LOCALIZED',
                      'EXPORTED','EXPORT_IN_PROGRESS','EXPORT_FAIL',
                      'EXPORTED','EXPORT_IN_PROGRESS','EXPORT_FAIL',
                      'EXPORT_CANCELLED','UPDATING')),
  DATA_SOURCE_TYPE VARCHAR(20),
  DATA_TYPE VARCHAR(20),
  INTERNAL_BASE_HREF VARCHAR(2000),
  EXTERNAL_BASE_HREF VARCHAR(2000),
  PREVIOUS_PAGE_ID BIGINT,
  `TIMESTAMP` DATETIME
     NOT NULL,
  CONTAINS_GS_TAG CHAR(1)
     CHECK (CONTAINS_GS_TAG IN ('Y', 'N')),
  STORAGE_PATH VARCHAR(4000),
  MODIFIER_USER_ID VARCHAR(80),
  LAST_MODIFIED DATETIME,
  FILE_LENGTH INT,
  GXML_VERSION VARCHAR(10),
  OVERRIDEN_WORD_COUNT INT(10),
  PREV_UPDATE_STATE VARCHAR(20)
     CHECK (PREV_UPDATE_STATE IN ('IMPORT_SUCCESS','NOT_LOCALIZED','ACTIVE_JOB','LOCALIZED',
             'EXPORTED','EXPORT_IN_PROGRESS','EXPORT_FAIL', 'EXPORT_CANCELLED')),
  JOB_ID BIGINT,
  COMPANY_ID BIGINT NOT NULL,
  BOM_TYPE SMALLINT DEFAULT 0,
  CONSTRAINT FK_SOURCE_PAGE_PREVIOUS_PAGE_ID FOREIGN KEY (PREVIOUS_PAGE_ID) REFERENCES SOURCE_PAGE(ID),
  CONSTRAINT FK_SOURCE_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;

ALTER TABLE REQUEST ADD CONSTRAINT REQUEST_PAGE_ID_FK FOREIGN KEY (PAGE_ID) REFERENCES SOURCE_PAGE(ID);

DROP TABLE IF EXISTS UPDATED_SOURCE_PAGE CASCADE;
CREATE TABLE UPDATED_SOURCE_PAGE
(
  ID BIGINT
    AUTO_INCREMENT
    PRIMARY KEY,
  JOB_ID BIGINT NOT NULL,
  L10N_PROFILE_ID BIGINT NOT NULL,
  SOURCE_PAGE_ID BIGINT NOT NULL,
  DATA_SOURCE VARCHAR(100) NOT NULL,
  EXTERNAL_PAGE_ID VARCHAR(750) NOT NULL
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS ADDING_SOURCE_PAGE CASCADE;
CREATE TABLE ADDING_SOURCE_PAGE
(
  ID BIGINT
    AUTO_INCREMENT
    PRIMARY KEY,
  JOB_ID BIGINT NOT NULL,
  L10N_PROFILE_ID BIGINT NOT NULL,
  DATA_SOURCE VARCHAR(100) NOT NULL,
  EXTERNAL_PAGE_ID VARCHAR(750) NOT NULL
) AUTO_INCREMENT = 1000;

--  DELAYED IMPORT REQUEST
--
DROP TABLE IF EXISTS DELAYED_IMPORT_REQUEST CASCADE;
CREATE TABLE DELAYED_IMPORT_REQUEST
(
  ID BIGINT
     PRIMARY KEY,
   GXML TEXT,
   EXTERNAL_PAGE_ID VARCHAR(750)
     NOT NULL,
   PREVIOUS_PAGE_ID BIGINT
     NOT NULL,
   DATA_SOURCE_TYPE VARCHAR(20),
   ORIGINAL_ENCODING VARCHAR(30),
   REIMPORT_TIME DATETIME
     NOT NULL,
   CONSTRAINT FK_DELAYED_IMPORT_REQUEST_ID FOREIGN KEY (ID) REFERENCES REQUEST(ID),
   CONSTRAINT FK_DELAYED_IMPORT_REQUEST_PREVIOUS_PAGE_ID FOREIGN KEY (PREVIOUS_PAGE_ID) REFERENCES SOURCE_PAGE(ID)
);



--  TARGET_PAGE
--
DROP TABLE IF EXISTS TARGET_PAGE CASCADE;
CREATE TABLE TARGET_PAGE
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  STATE VARCHAR(20)
     NOT NULL
     CHECK (STATE IN ('IMPORTING','IMPORT_FAIL','IMPORT_SUCCESS','OUT_OF_DATE',
                      'NOT_LOCALIZED','ACTIVE_JOB','LOCALIZED',
                      'EXPORTED','EXPORT_IN_PROGRESS','EXPORT_FAIL',
                      'EXPORT_CANCELLED','UPDATING')),
  EXPORTED_SUB_STATE SMALLINT DEFAULT 1,
  SOURCE_PAGE_ID BIGINT
     NOT NULL,
  WORKFLOW_IFLOW_INSTANCE_ID BIGINT,
  TOTAL_WORD_COUNT INT(10),
  TOTAL_EXACT_MATCH_WORD_COUNT INT(10),
  IN_CONTEXT_MATCH_WORD_COUNT INT(10),
  MT_EXACT_MATCH_WORD_COUNT INT(10),
  EXACT_SEGMENT_TM_WORD_COUNT INT(10),
  EXACT_CONTEXT_WORD_COUNT INT(10),
  FUZZY_LOW_WORD_COUNT INT(10),
  FUZZY_MED_WORD_COUNT INT(10),
  FUZZY_MED_HI_WORD_COUNT INT(10),
  FUZZY_HI_WORD_COUNT INT(10),
  NO_MATCH_WORD_COUNT INT(10),
  REPETITION_WORD_COUNT INT(10),
  MT_TOTAL_WORD_COUNT INT(10) DEFAULT 0,
  MT_FUZZY_NO_MATCH_WORD_COUNT INT(10) DEFAULT 0,
  MT_REPETITIONS INT(10) DEFAULT 0,
  MT_ENGINE_WORD_COUNT INT(10) DEFAULT 0,
  THRESHOLD_FUZZY_HI_WORD_COUNT INT(10),
  THRESHOLD_FUZZY_MED_HI_WORD_COUNT INT(10),
  THRESHOLD_FUZZY_MED_WORD_COUNT INT(10),
  THRESHOLD_FUZZY_LOW_WORD_COUNT INT(10),
  THRESHOLD_NO_MATCH_WORD_COUNT INT(10),
  INTERNAL_BASE_HREF VARCHAR(2000),
  EXTERNAL_BASE_HREF VARCHAR(2000),
  EXCEPTION_XML TEXT,
  `TIMESTAMP` DATETIME
     NOT NULL,
  STORAGE_PATH VARCHAR(4000),
  MODIFIER_USER_ID VARCHAR(80),
  LAST_MODIFIED DATETIME,
  FILE_LENGTH BIGINT,
  GXML_VERSION VARCHAR(10),
  PREV_UPDATE_STATE VARCHAR(20)
     CHECK (PREV_UPDATE_STATE IN ('IMPORT_SUCCESS','NOT_LOCALIZED','ACTIVE_JOB','LOCALIZED',
             'EXPORTED','EXPORT_IN_PROGRESS','EXPORT_FAIL', 'EXPORT_CANCELLED')),
  EXPORT_SUB_DIR VARCHAR(128),
  CVS_TARGET_MODULE VARCHAR(2000),
  CVS_TARGET_FILENAME VARCHAR(2000),
  NO_USE_IC_MATCH_WORD_COUNT INT(10),
  COMPANY_ID BIGINT DEFAULT NULL,
  CONSTRAINT FK_TARGET_PAGE_SOURCE_PAGE_ID FOREIGN KEY (SOURCE_PAGE_ID) REFERENCES SOURCE_PAGE(ID),
  CONSTRAINT FK_TARGET_PAGE_WORKFLOW_IFLOW_INSTANCE_ID FOREIGN KEY (WORKFLOW_IFLOW_INSTANCE_ID) REFERENCES WORKFLOW(IFLOW_INSTANCE_ID)
) AUTO_INCREMENT = 1000;


--  SOURCE_PAGE_LEVERAGE_GROUP
--
DROP TABLE IF EXISTS SOURCE_PAGE_LEVERAGE_GROUP CASCADE;
CREATE TABLE SOURCE_PAGE_LEVERAGE_GROUP
(
  LG_ID BIGINT,
  SP_ID BIGINT,
  PRIMARY KEY (LG_ID, SP_ID),
  CONSTRAINT FK_SOURCE_PAGE_LEVERAGE_GROUP_LG_ID FOREIGN KEY (LG_ID) REFERENCES LEVERAGE_GROUP(ID),
  CONSTRAINT FK_SOURCE_PAGE_LEVERAGE_GROUP_SP_ID FOREIGN KEY (SP_ID) REFERENCES SOURCE_PAGE(ID)
);

--  TARGET_PAGE_LEVERAGE_GROUP
--
DROP TABLE IF EXISTS TARGET_PAGE_LEVERAGE_GROUP CASCADE;
CREATE TABLE TARGET_PAGE_LEVERAGE_GROUP
(
  LG_ID BIGINT,
  TP_ID BIGINT,
  PRIMARY KEY (LG_ID, TP_ID),
  CONSTRAINT FK_TARGET_PAGE_LEVERAGE_GROUP_LG_ID FOREIGN KEY (LG_ID) REFERENCES LEVERAGE_GROUP(ID),
  CONSTRAINT FK_TARGET_PAGE_LEVERAGE_GROUP_TP_ID FOREIGN KEY (TP_ID) REFERENCES TARGET_PAGE(ID)
);

--  Secondary_Target_File
--
DROP TABLE IF EXISTS SECONDARY_TARGET_FILE CASCADE;
CREATE TABLE SECONDARY_TARGET_FILE
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  WORKFLOW_ID BIGINT
     NOT NULL,
  STORAGE_PATH VARCHAR(4000)
     NOT NULL,
  MODIFIER_USER_ID VARCHAR(80)
     NOT NULL,
  LAST_MODIFIED BIGINT
     NOT NULL,
  FILE_SIZE INT
     NOT NULL,
  EVENT_FLOW_XML TEXT,
  STATE VARCHAR(20)
     NOT NULL
     CHECK (STATE IN ('ACTIVE_JOB','CANCELLED','LOCALIZED','OUT_OF_DATE',
                      'EXPORTED','EXPORT_IN_PROGRESS','EXPORT_FAIL')),
  IS_ACTIVE CHAR(1)
     NOT NULL
     CHECK (IS_ACTIVE IN ('Y','N')),
  CONSTRAINT FK_SECONDARY_TARGET_FILE_WORKFLOW_ID FOREIGN KEY (WORKFLOW_ID) REFERENCES WORKFLOW(IFLOW_INSTANCE_ID)
) AUTO_INCREMENT = 1000;

--  TEMPLATE
--
DROP TABLE IF EXISTS TEMPLATE CASCADE;
CREATE TABLE TEMPLATE
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  SOURCE_PAGE_ID BIGINT
     NOT NULL,
  TYPE CHAR(3)
     NOT NULL
     CHECK (TYPE IN ('EXP','PRV','STD','DTL')),
  CONSTRAINT FK_TEMPLATE_SOURCE_PAGE_ID FOREIGN KEY (SOURCE_PAGE_ID) REFERENCES SOURCE_PAGE(ID)
) AUTO_INCREMENT = 1000;

--  TEMPLATE_PART
--
DROP TABLE IF EXISTS TEMPLATE_PART CASCADE;
CREATE TABLE TEMPLATE_PART
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  TEMPLATE_ID BIGINT
     NOT NULL,
  ORDER_NUM INT
     NOT NULL,
  SKELETON_CLOB LONGTEXT,
  SKELETON_STRING VARCHAR(4000),
  TU_ID BIGINT DEFAULT 0,
  CONSTRAINT FK_TEMPLATE_PART_TEMPLATE_ID FOREIGN KEY (TEMPLATE_ID) REFERENCES TEMPLATE(ID)
) AUTO_INCREMENT = 1000;

--  TEMPLATE_PART_ARCHIVED
--
DROP TABLE IF EXISTS TEMPLATE_PART_ARCHIVED CASCADE;
CREATE TABLE TEMPLATE_PART_ARCHIVED
(
  ID BIGINT PRIMARY KEY,
  TEMPLATE_ID BIGINT NOT NULL,
  ORDER_NUM INT NOT NULL,
  SKELETON_CLOB LONGTEXT,
  SKELETON_STRING VARCHAR(4000),
  TU_ID BIGINT DEFAULT 0
);

--  TASK_TUV
--
DROP TABLE IF EXISTS TASK_TUV CASCADE;
CREATE TABLE TASK_TUV
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  CURRENT_TUV_ID BIGINT
     NOT NULL,
  TASK_ID BIGINT
     NOT NULL,
  VERSION INT(3)
     NOT NULL,
  PREVIOUS_TUV_ID BIGINT
     NOT NULL,
  TASK_NAME VARCHAR(40)
     NOT NULL,
  CONSTRAINT FK_TASK_TUV_TASK_ID FOREIGN KEY (TASK_ID) REFERENCES TASK_INFO(TASK_ID)
) AUTO_INCREMENT = 1000;


--  IMAGE_REPLACE_FILE_MAP
--
DROP TABLE IF EXISTS IMAGE_REPLACE_FILE_MAP CASCADE;
CREATE TABLE IMAGE_REPLACE_FILE_MAP
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  STATE VARCHAR(20)
     NOT NULL
     CHECK (STATE IN ('LOCALIZED', 'EXPORTED', 'EXPORT_IN_PROGRESS',
                       'EXPORT_FAILED', 'EXPORT_CANCELLED')),
  TARGET_PAGE_ID BIGINT
     NOT NULL,
  TUV_ID BIGINT
     NOT NULL,
  SUB_ID INT,
  TEMP_SOURCE_NAME VARCHAR(128),
  REAL_SOURCE_NAME VARCHAR(512),
  CONSTRAINT FK_IMAGE_REPLACE_FILE_MAP_TARGET_PAGE_ID FOREIGN KEY (TARGET_PAGE_ID) REFERENCES TARGET_PAGE(ID)
) AUTO_INCREMENT = 1000;

--  SYSTEM_PARAMETER
--
DROP TABLE IF EXISTS SYSTEM_PARAMETER CASCADE;
CREATE TABLE SYSTEM_PARAMETER
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  NAME VARCHAR(127)
     NOT NULL,
  VALUE VARCHAR(2000),
  COMPANY_ID BIGINT
      NOT NULL,
  UNIQUE(NAME, COMPANY_ID),
  CONSTRAINT FK_SYSTEM_PARAMETER_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;

--  USER_PARAMETER
--
DROP TABLE IF EXISTS USER_PARAMETER CASCADE;
CREATE TABLE USER_PARAMETER
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  USER_ID VARCHAR(80)
     NOT NULL,
  NAME VARCHAR(127)
     NOT NULL,
  VALUE VARCHAR(2000),
  UNIQUE (USER_ID, NAME)
) AUTO_INCREMENT = 1000;

--  USER_FIELD_SECURITY
--
DROP TABLE IF EXISTS USER_FIELD_SECURITY CASCADE;
CREATE TABLE USER_FIELD_SECURITY
(
   ID BIGINT
      AUTO_INCREMENT
      PRIMARY KEY,
   USER_ID VARCHAR(80)
      NOT NULL
      UNIQUE,
   SECURITIES_XML VARCHAR(2000)
      NOT NULL
) AUTO_INCREMENT = 1000;

--  CMS_USER
DROP TABLE IF EXISTS CMS_USER CASCADE;
CREATE TABLE CMS_USER
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  AMBASSADOR_USER_ID VARCHAR(80)
     NOT NULL
     UNIQUE,
  CMS_USER_ID VARCHAR(25)
     NOT NULL,
  CMS_PASSWORD VARCHAR(4000)
     NOT NULL
) AUTO_INCREMENT = 1000;

--  Holiday
DROP TABLE IF EXISTS HOLIDAY CASCADE;
CREATE TABLE HOLIDAY
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  NAME VARCHAR(40)
     NOT NULL,
  DESCRIPTION VARCHAR(4000),
  TIME_EXPRESSION VARCHAR(100)
     NOT NULL,
  COMPANY_ID BIGINT
     NOT NULL,
  MONTH INT(2)
     NOT NULL,
  DAY_OF_MONTH INT(2),
  WEEK_OF_MONTH CHAR(1)
     CHECK (WEEK_OF_MONTH IN ('1','2','3','4','$')),
  DAY_OF_WEEK INT(1),
  ENDING_YEAR INT(4),
  IS_ABSOLUTE CHAR(1)
     NOT NULL
     CHECK (IS_ABSOLUTE IN ('Y','N')),
  CONSTRAINT FK_HOLIDAY_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;


--  Calendar
DROP TABLE IF EXISTS CALENDAR CASCADE;
CREATE TABLE CALENDAR
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  NAME VARCHAR(40)
     NOT NULL,
  HOURS_PER_DAY INT(2)
     NOT NULL,
  TIME_ZONE VARCHAR(100)
     NOT NULL,
  LAST_UPDATED_BY VARCHAR(80)
     NOT NULL,
  COMPANY_ID BIGINT
     NOT NULL,
  LAST_UPDATED_TIME DATETIME
     NOT NULL,
  IS_DEFAULT CHAR(1)
     NOT NULL
     CHECK (IS_DEFAULT IN ('Y','N')),
  CONSTRAINT FK_CALENDAR_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;

--  Calendar_Holiday
DROP TABLE IF EXISTS CALENDAR_HOLIDAY CASCADE;
CREATE TABLE CALENDAR_HOLIDAY
(
  CALENDAR_ID BIGINT
     NOT NULL,
  HOLIDAY_ID BIGINT
     NOT NULL,
  PRIMARY KEY (CALENDAR_ID, HOLIDAY_ID),
  CONSTRAINT FK_CALENDAR_HOLIDAY_CALENDAR_ID FOREIGN KEY (CALENDAR_ID) REFERENCES CALENDAR(ID),
  CONSTRAINT FK_CALENDAR_HOLIDAY_HOLIDAY_ID FOREIGN KEY (HOLIDAY_ID) REFERENCES HOLIDAY(ID)
);


--  Calendar Working Day
DROP TABLE IF EXISTS CALENDAR_WORKING_DAY CASCADE;
CREATE TABLE CALENDAR_WORKING_DAY
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  CALENDAR_ID BIGINT
     NOT NULL,
  WORKING_DAY INT(1)
     NOT NULL ,
  CONSTRAINT FK_CALENDAR_WORKING_DAY_CALENDAR_ID FOREIGN KEY (CALENDAR_ID) REFERENCES CALENDAR(ID)
) AUTO_INCREMENT = 1000;

--  Calendar Working Hours
DROP TABLE IF EXISTS CALENDAR_WORKING_HOUR CASCADE;
CREATE TABLE CALENDAR_WORKING_HOUR
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  CALENDAR_WORKING_DAY_ID BIGINT
     NOT NULL,
  ORDER_NUM INT(1)
     NOT NULL,
  START_HOUR INT(2)
     NOT NULL,
  START_MINUTE INT(2)
     NOT NULL,
  END_HOUR INT(2)
     NOT NULL,
  END_MINUTE INT(2)
     NOT NULL,
  DURATION_EXPRESSION VARCHAR(100)
     NOT NULL,
  START_DATE DATETIME
     NOT NULL,
  CONSTRAINT FK_CALENDAR_WORKING_HOUR_CALENDAR_WORKING_DAY_ID FOREIGN KEY (CALENDAR_WORKING_DAY_ID) REFERENCES CALENDAR_WORKING_DAY(ID)
) AUTO_INCREMENT = 1000;


--  User Calendar
DROP TABLE IF EXISTS USER_CALENDAR CASCADE;
CREATE TABLE USER_CALENDAR
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  CALENDAR_ID BIGINT
     NOT NULL,
  OWNER_USER_ID VARCHAR(80)
     NOT NULL
     UNIQUE,
  ACTIVITY_BUFFER INT(2)
     NOT NULL,
  TIME_ZONE VARCHAR(100)
     NOT NULL,
  LAST_UPDATED_BY VARCHAR(80)
     NOT NULL,
  LAST_UPDATED_TIME DATETIME
     NOT NULL,
  CONSTRAINT FK_USER_CALENDAR_CALENDAR_ID FOREIGN KEY (CALENDAR_ID) REFERENCES CALENDAR(ID)
) AUTO_INCREMENT = 1000;

--  User Calendar Working Day
DROP TABLE IF EXISTS USER_CALENDAR_WORKING_DAY CASCADE;
CREATE TABLE USER_CALENDAR_WORKING_DAY
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  CALENDAR_ID BIGINT
     NOT NULL,
  WORKING_DAY INT(1)
     NOT NULL,
  CONSTRAINT FK_USER_CALENDAR_WORKING_DAY_CALENDAR_ID FOREIGN KEY (CALENDAR_ID) REFERENCES USER_CALENDAR(ID)
) AUTO_INCREMENT = 1000;

--  User Calendar Working Hours
DROP TABLE IF EXISTS USER_CALENDAR_WORKING_HOUR CASCADE;
CREATE TABLE USER_CALENDAR_WORKING_HOUR
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  USER_CALENDAR_WORKING_DAY_ID BIGINT
     NOT NULL,
  ORDER_NUM INT(1)
     NOT NULL,
  START_HOUR INT(2)
     NOT NULL,
  START_MINUTE INT(2)
     NOT NULL,
  END_HOUR INT(2)
     NOT NULL,
  END_MINUTE INT(2)
     NOT NULL,
  DURATION_EXPRESSION VARCHAR(100)
     NOT NULL,
  START_DATE DATETIME
     NOT NULL,
  CONSTRAINT FK_USER_CALENDAR_WORKING_HOUR_USER_CALENDAR_WORKING_DAY_ID FOREIGN KEY (USER_CALENDAR_WORKING_DAY_ID) REFERENCES USER_CALENDAR_WORKING_DAY(ID)
) AUTO_INCREMENT = 1000;

--  Reserved Time
DROP TABLE IF EXISTS RESERVED_TIME CASCADE;
CREATE TABLE RESERVED_TIME
(
  ID BIGINT
     AUTO_INCREMENT
     PRIMARY KEY,
  USER_CALENDAR_ID BIGINT
     NOT NULL,
  SUBJECT VARCHAR(4200)
     NOT NULL,
  TYPE VARCHAR(20)
     NOT NULL
     CHECK (TYPE IN ('ACCEPTED', 'BUFFER', 'EVENT', 'PERSONAL', 'ASSIGNED')),
  TASK_ID BIGINT,
  START_TIME DATETIME
     NOT NULL,
  START_HOUR INT(2)
     NOT NULL,
  START_MINUTE INT(2)
     NOT NULL,
  END_TIME DATETIME,
  END_HOUR INT(2)
     NOT NULL,
  END_MINUTE INT(2)
     NOT NULL,
  DURATION_EXPRESSION VARCHAR(100)
     NOT NULL,
  REPEAT_EXPRESSION VARCHAR(10),
  CONSTRAINT FK_RESERVED_TIME_USER_CALENDAR_ID FOREIGN KEY (USER_CALENDAR_ID) REFERENCES USER_CALENDAR(ID),
  CONSTRAINT FK_RESERVED_TIME_TASK_ID FOREIGN KEY (TASK_ID) REFERENCES TASK_INFO(TASK_ID)
) AUTO_INCREMENT = 1000;

--  FLUX_GS_MAP
--
DROP TABLE IF EXISTS FLUX_GS_MAP CASCADE;
CREATE TABLE FLUX_GS_MAP
(
   ID VARCHAR(128)
      PRIMARY KEY,
   EVENT_TYPE INT(2)
      NOT NULL,
   DOMAIN_OBJ_ID INT
      NOT NULL,
   DOMAIN_OBJ_TYPE INT(2)
      NOT NULL
);

--  FLUX_GS_MAP_EVENT_TYPE
--
DROP TABLE IF EXISTS FLUX_GS_MAP_EVENT_TYPE CASCADE;
CREATE TABLE FLUX_GS_MAP_EVENT_TYPE
(
  ID INT(2)
     PRIMARY KEY,
  NAME VARCHAR(50)
     NOT NULL
     UNIQUE
);


--  FLUX_GS_MAP_OBJECT_TYPE
--
DROP TABLE IF EXISTS FLUX_GS_MAP_OBJECT_TYPE CASCADE;
CREATE TABLE FLUX_GS_MAP_OBJECT_TYPE
(
  ID INT(2)
     PRIMARY KEY,
  NAME VARCHAR(200)
     NOT NULL
     UNIQUE
);

-- CVS MODULE MAPPING
--
DROP TABLE IF EXISTS MODULE_MAPPING CASCADE;
CREATE TABLE MODULE_MAPPING
(
  ID BIGINT
    AUTO_INCREMENT
	PRIMARY KEY,
  SOURCE_LOCALE VARCHAR(40)
    NOT NULL,
  SOURCE_lOCALE_LONG VARCHAR(100)
    DEFAULT NULL,
  SOURCE_MODULE VARCHAR(200)
    NOT NULL,
  TARGET_LOCALE VARCHAR(40)
    NOT NULL,
  TARGET_LOCALE_LONG VARCHAR(100)
    DEFAULT NULL,
  TARGET_MODULE VARCHAR(200)
    NOT NULL,
  COMPANY_ID BIGINT(20) NOT NULL,
  MODULE_ID BIGINT(20) NULL,
  IS_ACTIVE char(1)
    DEFAULT 'Y',
  SUB_FOLDER_MAPPED CHAR(1) DEFAULT '0',
  UNIQUE KEY MODULE_MAPPING_INDEX (ID, IS_ACTIVE, COMPANY_ID, SOURCE_LOCALE, TARGET_LOCALE, SOURCE_MODULE, TARGET_MODULE)
) AUTO_INCREMENT = 1;

-- CVS MODULE FILE RENAME
--
DROP TABLE IF EXISTS MODULE_RENAME CASCADE;
CREATE TABLE MODULE_RENAME
(
	 ID BIGINT
	   AUTO_INCREMENT
	   PRIMARY KEY,
	 SOURCE_NAME VARCHAR(40)
	   NOT NULL,
	 TARGET_NAME VARCHAR(40)
	   NOT NULL,
	 MODULE_MAPPING_ID BIGINT
  	   DEFAULT NULL,
	 CONSTRAINT FK_MODULE_MAPPING_ID FOREIGN KEY (MODULE_MAPPING_ID) REFERENCES MODULE_MAPPING (ID)
);

DROP TABLE IF EXISTS CVS_SERVER CASCADE;
CREATE TABLE IF NOT EXISTS CVS_SERVER (
	ID BIGINT(20) NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(200) NOT NULL,
	HOSTIP VARCHAR(100) NOT NULL,
	HOSTPORT INT DEFAULT 2401,
	PROTOCOL INT NOT NULL DEFAULT 0,
	SANDBOX VARCHAR(100) NOT NULL,
	COMPANYID BIGINT(20) NOT NULL,
	REPOSITORY VARCHAR(200) NOT NULL,
	LOGINUSER VARCHAR(100) NOT NULL,
	LOGINPWD VARCHAR(32) NOT NULL,
	CVSROOTENV VARCHAR(1000) NOT NULL,
	ISACTIVE CHAR(1) NOT NULL DEFAULT 'Y',
	PRIMARY KEY (ID),
	KEY FK_SERVER_COMPANY (COMPANYID),
	CONSTRAINT FK_SERVER_COMPANY FOREIGN KEY (COMPANYID) REFERENCES COMPANY (ID)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS CVS_SERVER_USER CASCADE;
CREATE TABLE IF NOT EXISTS CVS_SERVER_USER (
	ID BIGINT(20) NOT NULL AUTO_INCREMENT,
	SERVER BIGINT(20) NOT NULL,
	USERNAME VARCHAR(200) NOT NULL,
	LOGINNAME VARCHAR(200) NOT NULL,
	PASSWORD VARCHAR(32),
	PRIMARY KEY (ID),
	KEY FK_SERVER_USER (SERVER),
	CONSTRAINT FK_SERVER_USER FOREIGN KEY (SERVER) REFERENCES CVS_SERVER (ID)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS CVS_REPOSITORY CASCADE;
CREATE TABLE IF NOT EXISTS CVS_REPOSITORY (
	ID BIGINT(20) NOT NULL AUTO_INCREMENT,
	SERVER BIGINT(20) NOT NULL,
	NAME VARCHAR(100),
	REPOSITORY VARCHAR(100) NOT NULL,
	FOLDERNAME VARCHAR(100) NOT NULL,
	LOGINUSER VARCHAR(100) NOT NULL,
	LOGINPWD VARCHAR(32) NOT NULL,
	CVSROOTENV VARCHAR(1000) NOT NULL,
	ISACTIVE CHAR(1) NOT NULL DEFAULT 'Y',
	PRIMARY KEY (ID),
	KEY FK_REPOSITORY_SERVER (SERVER),
	CONSTRAINT FK_REPOSITORY_SERVER FOREIGN KEY (SERVER) REFERENCES CVS_SERVER (ID)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS CVS_MODULE CASCADE;
CREATE TABLE IF NOT EXISTS CVS_MODULE (
	ID BIGINT(20) NOT NULL AUTO_INCREMENT,
	SERVER BIGINT(20) NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	MODULENAME VARCHAR(2000) NOT NULL,
	REALPATH VARCHAR(2000) NULL,
	BRANCH VARCHAR(100) NULL DEFAULT 'HEAD',
	LAST_CHECKOUT VARCHAR(50) NULL,
	ISACTIVE CHAR(1) NOT NULL DEFAULT 'Y',
	PRIMARY KEY (ID),
	KEY FK_MODULE_SERVER (SERVER),
	CONSTRAINT FK_MODULE_SERVER FOREIGN KEY (SERVER) REFERENCES CVS_SERVER (ID)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS CVS_SOURCE_FILES CASCADE;
CREATE TABLE IF NOT EXISTS CVS_SOURCE_FILES (
	ID BIGINT(20) NOT NULL AUTO_INCREMENT,
	JOB_NAME VARCHAR(100) NOT NULL,
	FILENAME VARCHAR(2000) NOT NULL,
	STATUS INT NOT NULL DEFAULT 0,
	JOB_ID BIGINT(20) NULL,
	MODULE_ID BIGINT(20) NOT NULL,
	JOB_NOTES VARCHAR(1000) NULL,
	PRIMARY KEY (ID)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS module_mapping_di CASCADE;
CREATE TABLE IF NOT EXISTS module_mapping_di (
  ID bigint(20) NOT NULL AUTO_INCREMENT,
  SOURCE_LOCALE varchar(40) NOT NULL,
  SOURCE_lOCALE_LONG varchar(100) DEFAULT NULL,
  SOURCE_MODULE varchar(200) NOT NULL,
  TARGET_LOCALE varchar(40) NOT NULL,
  TARGET_LOCALE_LONG varchar(100) DEFAULT NULL,
  TARGET_MODULE varchar(200) NOT NULL,
  USER_ID varchar(200) NOT NULL,
  IS_ACTIVE char(1) DEFAULT '1',
  PRIMARY KEY (ID),
  UNIQUE KEY SOURCE_LOCALE (SOURCE_LOCALE,TARGET_LOCALE,SOURCE_MODULE,TARGET_MODULE,USER_ID)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

-- GBS-1158 PM set up their own super user (By Vincent Yan 2010/06/22)
CREATE TABLE IF NOT EXISTS USER_DEFAULT_ROLES (
   ID bigint(20) NOT NULL AUTO_INCREMENT,
   SOURCE_LOCALE bigint(20) NOT NULL,
   TARGET_LOCALE bigint(20) NOT NULL,
   USER_ID varchar(100) NOT NULL,
   PRIMARY KEY (ID),
   KEY FK_LOCALE_PAIR_SOURCE_LOCALE (SOURCE_LOCALE),
   KEY FK_LOCALE_PAIR_TARGET_LOCALE (TARGET_LOCALE),
   CONSTRAINT FK_LOCALE_PAIR_SOURCE_LOCALE FOREIGN KEY (SOURCE_LOCALE) REFERENCES LOCALE (ID),
   CONSTRAINT FK_LOCALE_PAIR_TARGET_LOCALE FOREIGN KEY (TARGET_LOCALE) REFERENCES LOCALE (ID)
 ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS USER_DEFAULT_ACTIVITIES (
   ID bigint(20) NOT NULL AUTO_INCREMENT,
   DEFAULT_ROLE_ID bigint(20) NOT NULL,
   ACTIVITY_NAME varchar(40) NOT NULL,
   PRIMARY KEY (ID),
   KEY FK_DEFAULT_ACTIVITIES (DEFAULT_ROLE_ID),
   CONSTRAINT `FK_DEFAULT_ACTIVITIES` FOREIGN KEY (DEFAULT_ROLE_ID) REFERENCES USER_DEFAULT_ROLES (ID)
 ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;


-- GBS-905 BlogSmith-GlobalSight Integration
-- Added by Vincent Yan, 2010-4-19
DROP TABLE IF EXISTS RSS_ITEM CASCADE;
DROP TABLE IF EXISTS RSS_FEED CASCADE;

CREATE TABLE RSS_FEED (
            ID bigint(20) NOT NULL AUTO_INCREMENT,
            RSS_URL varchar(100) DEFAULT NULL,
            ENCODING varchar(20) DEFAULT NULL,
            VERSION varchar(6) DEFAULT NULL,
            TITLE varchar(200) DEFAULT NULL,
            LINK varchar(200) DEFAULT NULL,
            DESCRIPTION text,
            LANGUAGE varchar(12) DEFAULT NULL,
            COPYRIGHT varchar(200) DEFAULT NULL,
            IMAGE_TITLE varchar(200) DEFAULT NULL,
            IMAGE_LINK varchar(200) DEFAULT NULL,
            IMAGE_URL varchar(100) DEFAULT NULL,
            IS_DEFAULT char(1) DEFAULT 'N',
            COMPANY_ID bigint(20) DEFAULT NULL,
            PRIMARY KEY (ID),
            UNIQUE KEY IDX_RSS_URL (RSS_URL, COMPANY_ID)
          ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;


CREATE TABLE RSS_ITEM (
            ID bigint(20) NOT NULL AUTO_INCREMENT,
            FEED_ID bigint(20) DEFAULT NULL,
            TITLE varchar(200) DEFAULT NULL,
            LINK varchar(200) DEFAULT NULL,
            DESCRIPTON text,
            AUTHOR varchar(30) DEFAULT NULL,
            PUBDATE varchar(30) DEFAULT NULL,
            STATUS int(11) DEFAULT '0',
            PUBLISHED_DATE datetime DEFAULT NULL,
            IS_READ int(11) DEFAULT '0',
            PRIMARY KEY (ID),
            KEY FK_RSS_ITEM_FEED_ID (FEED_ID),
            CONSTRAINT `FK_RSS_ITEM_FEED_ID` FOREIGN KEY (FEED_ID) REFERENCES RSS_FEED (ID)
          ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;


DROP TABLE IF EXISTS module_rename_di CASCADE;
CREATE TABLE IF NOT EXISTS module_rename_di (
 ID BIGINT(20) NOT NULL AUTO_INCREMENT,
 SOURCE_NAME VARCHAR(40) NOT NULL,
 TARGET_NAME VARCHAR(40) NOT NULL,
 MODULE_MAPPING_ID BIGINT(20) DEFAULT NULL,
 PRIMARY KEY (ID),
 KEY FK_MODULE_MAPPING_DI_ID (MODULE_MAPPING_ID),
 CONSTRAINT FK_MODULE_MAPPING_DI_ID FOREIGN KEY (MODULE_MAPPING_ID) REFERENCES module_mapping_di (ID)
) ENGINE=INNODB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `filter_configuration`;
CREATE TABLE `filter_configuration` (
  `ID` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `NAME` varchar(100) NOT NULL,
  `KNOWN_FORMAT_ID` varchar(250) NOT NULL,
  `FILTER_TABLE_NAME` varchar(60) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

LOCK TABLES `filter_configuration` WRITE;
INSERT INTO `filter_configuration`
VALUES
(1,'Java Properties Filter','|4|10|11|','java_properties_filter','The filter for java properties files.',1),
(2,'Java Script Filter','|5|','java_script_filter','The filter for java script files.',1),
(3,'MS Office Doc Filter','|14|33|','ms_office_doc_filter','The filter for MS office doc files.',1),
(4,'XML Filter','|7|15|16|17|25|45|','xml_rule_filter','The filter for XML files.',1),
(5,'MS Office Excel Filter','|19|34|','ms_office_excel_filter','The filter for MS excel files.',1),
(6,'HTML Filter','|1|','html_filter','The filter for HTML files.',1),
(7,'JSP Filter','|13|','jsp_filter','The filter for JSP files.',1),
(8,'InDesign Filter','|31|36|37|38|40|52|','indd_filter','The filter for InDesign files.',1),
(9,'OpenOffice Filter','|41|','openoffice_filter','The filter for OpenOffice files.',1),
(10,'MS Office PowerPoint Filter','|20|35|','ms_office_ppt_filter','The filter for MS PowerPoint files.',1),
(11,'MS Office 2010 Filter','|43|','office2010_filter','The filter for MS Office 2010 files.',1),
(12,'Portable Object Filter','|42|','po_filter','The filter for Portable Object files.',1),
(13,'Base Text Filter','|0|','base_filter','The filter to handle extracted text.',1),
(14,'Plain Text Filter','|6|','plain_text_filter','The filter for Plain Text files.',1),
(15,'QA Filter','|0|','qa_filter','The filter to handle QA checks.',1);

UNLOCK TABLES;

DROP TABLE IF EXISTS `java_properties_filter`;
CREATE TABLE `java_properties_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `ENABLE_SID_SUPPORT` char(1) NOT NULL DEFAULT 'N',
  `ENABLE_UNICODE_ESCAPE` char(1) NOT NULL DEFAULT 'N',
  `ENABLE_TRIM_SEGMENT` char(1) NOT NULL DEFAULT 'N',
  `SECOND_FILTER_ID` bigint(11) DEFAULT '-2',
  `SECOND_FILTER_TABLE_NAME` varchar(45),
  `INTERNAL_TEXTS` text NOT NULL,
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

LOCK TABLES `java_properties_filter` WRITE;
INSERT INTO `java_properties_filter` VALUES
(1,'Java Properties filter (Default)','The default java properties filters','N','N','N','-2',NULL,'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><propertiesInternalText><items><content>\\{[^{]*?\\}</content><isRegex>true</isRegex></items></propertiesInternalText>',1);
UNLOCK TABLES;

DROP TABLE IF EXISTS `java_script_filter`;
CREATE TABLE `java_script_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `JS_FUNCTION_FILTER` varchar(1000) NOT NULL,
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  `ENABLE_UNICODE_ESCAPE` char(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS CVS_FILE_PROFILE CASCADE;
CREATE TABLE IF NOT EXISTS CVS_FILE_PROFILE (
  ID BIGINT(20) NOT NULL AUTO_INCREMENT,
  PROJECT_ID BIGINT(20) NOT NULL,
  MODULE_ID BIGINT(20) NOT NULL,
  FILE_PATH VARCHAR(1000) NULL,
  FILE_EXT VARCHAR(100) NULL,
  FILE_PROFILE_ID BIGINT(20) NOT NULL,
  SOURCE_LOCALE VARCHAR(40) NULL,
  COMPANY_ID BIGINT(20) NOT NULL,
  PRIMARY KEY (ID)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

ALTER TABLE CVS_FILE_PROFILE ADD INDEX CVS_FILE_PROFILE_INDEX (SOURCE_LOCALE, PROJECT_ID, MODULE_ID, FILE_PROFILE_ID);

--
-- Dumping data for table `java_script_filter`
--
LOCK TABLES `java_script_filter` WRITE;
INSERT INTO `java_script_filter` VALUES
(1,'Java Script Filter(Default)','The default java script filter','l10n',1, 'N');
UNLOCK TABLES;

DROP TABLE IF EXISTS `ms_office_doc_filter`;
CREATE TABLE `ms_office_doc_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `UNEXTRACTABLE_WORD_PARAGRAPH_STYLES` varchar(4000) NOT NULL,
  `UNEXTRACTABLE_WORD_CHARACTER_STYLES` varchar(4000) NOT NULL,
  `INTERNAL_TEXT_CHARACTER_STYLES` varchar(4000) NOT NULL,
  `IS_HEADER_TRANSLATE` char(1) NOT NULL,
  `IS_ALT_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_TOC_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  `CONTENT_POST_FILTER_ID` bigint(20) NOT NULL,
  `CONTENT_POST_FILTER_TABLE_NAME` varchar(45) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Dumping data for table `ms_office_doc_filter`
--
LOCK TABLES `ms_office_doc_filter` WRITE;
INSERT INTO `ms_office_doc_filter` VALUES
(1,'MS Office Doc Filter(Default)','The default MS Office Doc Filtersds','DONOTTRANSLATE_para,tw4winExternal,tw4winInternal',
'DONOTTRANSLATE_char,tw4winInternal,tw4winExternal','','Y','N','N',1, -2, '');
UNLOCK TABLES;

DROP TABLE IF EXISTS `ms_office_excel_filter`;
CREATE TABLE `ms_office_excel_filter` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(1000) NOT NULL,
  `COMPANY_ID` bigint(20) NOT NULL,
  `IS_ALT_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_TAB_NAMES_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `CONTENT_POST_FILTER_ID` bigint(20) NOT NULL,
  `CONTENT_POST_FILTER_TABLE_NAME` varchar(45) NOT NULL,
  PRIMARY KEY (`ID`)
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `openoffice_filter`;
CREATE TABLE `openoffice_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `UNEXTRACTABLE_WORD_PARAGRAPH_STYLES` varchar(4000) NOT NULL,
  `UNEXTRACTABLE_WORD_CHARACTER_STYLES` varchar(4000) NOT NULL,
  `IS_HEADER_TRANSLATE` char(1) NOT NULL,
  `IS_FILEINFO_TRANSLATE` char(1) NOT NULL,
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  `XML_FILTER_ID` bigint(20) NOT NULL,
  `SECOND_FILTER_ID` bigint(20) NOT NULL,
  `SECOND_FILTER_TABLE_NAME` varchar(45) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `office2010_filter`;
CREATE TABLE `office2010_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `UNEXTRACTABLE_WORD_PARAGRAPH_STYLES` varchar(4000) NOT NULL,
  `UNEXTRACTABLE_WORD_CHARACTER_STYLES` varchar(4000) NOT NULL,
  `UNEXTRACTABLE_EXCEL_CELL_STYLES` varchar(4000) NOT NULL,
  `INTERNAL_TEXT_CHARACTER_STYLES` varchar(4000) NOT NULL,
  `EXCEL_INTERNAL_TEXT_STYLES` varchar(1000) NOT NULL,
  `IS_HEADER_TRANSLATE` char(1) NOT NULL,
  `IS_FOOTENDNOTE_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_MASTER_TRANSLATE` char(1) NOT NULL,
  `IS_FILEINFO_TRANSLATE` char(1) NOT NULL,
  `IS_NOTES_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_PPTLAYOUT_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_NOTEMASTER_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_HANDOUTMASTER_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_EXCEL_TAB_NAMES_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_TOOLTIPS_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_HIDDENTEXT_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_URL_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_TOC_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `IS_COMMENT_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  `EXCEL_ORDER` char(1) NOT NULL DEFAULT 'n',
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  `XML_FILTER_ID` bigint(20) NOT NULL,
  `CONTENT_POST_FILTER_ID` bigint(20) NOT NULL,
  `CONTENT_POST_FILTER_TABLE_NAME` varchar(45) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `ms_office_ppt_filter`;
CREATE TABLE IF NOT EXISTS `ms_office_ppt_filter` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(1000) NOT NULL,
   IS_ALT_TRANSLATE CHAR(1) NOT NULL DEFAULT 'N',
   IS_NOTES_TRANSLATE CHAR(1) NOT NULL DEFAULT 'N',
  `COMPANY_ID` bigint(20) NOT NULL,
  `CONTENT_POST_FILTER_ID` bigint(20) NOT NULL,
  `CONTENT_POST_FILTER_TABLE_NAME` varchar(45) NOT NULL,
  PRIMARY KEY (`ID`)
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE IF NOT EXISTS `po_filter` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(1000) NOT NULL,
  `COMPANY_ID` bigint(20) NOT NULL,
  `SECOND_FILTER_ID` bigint(20) NOT NULL,
  `SECOND_FILTER_TABLE_NAME` varchar(45) NOT NULL,
  PRIMARY KEY (`ID`)
  ) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `xml_rule_filter`;
CREATE TABLE `xml_rule_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `XML_RULE_ID` bigint(20) NOT NULL DEFAULT '-1',
  `ENABLE_CONVERT_HTML_ENTITY` char(1) NOT NULL DEFAULT 'N',
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  `USE_XML_RULE` char(1) NOT NULL DEFAULT 'Y',
  `CONFIG_XML` text,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

LOCK TABLES `xml_rule_filter` WRITE;
INSERT INTO `xml_rule_filter` VALUES
(1, 'XML Filter(Default)', 'The default xml filter', 1, 'N', 1, 'Y', '');
UNLOCK TABLES;

DROP TABLE IF EXISTS `html_filter`;
CREATE TABLE IF NOT EXISTS `html_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `EMBEDDABLE_TAGS` varchar(4000) NOT NULL,
  `PLACEHOLD_TRIMMING` varchar(255) NOT NULL,
  `COMPANY_ID` bigint(20) NOT NULL,
  `DEFAULT_EMBEDDABLE_TAGS` varchar(4000) NOT NULL,
  `CONVERT_HTML_ENTRY` char(1) NOT NULL DEFAULT 'N',
  `IGNORE_INVALIDE_HTML_TAGS` char(1) NOT NULL DEFAULT 'N',
  `ADD_RTL_DIRECTIONALITY` char(1) NOT NULL DEFAULT 'N',
  `WHITESPACE_PRESERVE` char(1) NOT NULL DEFAULT 'N',
  `JS_FUNCTION_FILTER` varchar(1000) NOT NULL,
  `DEFAULT_PAIRED_TAGS` varchar(2000) NOT NULL,
  `PAIRED_TAGS` varchar(2000) NOT NULL,
  `DEFAULT_UNPAIRED_TAGS` varchar(2000) NOT NULL,
  `UNPAIRED_TAGS` varchar(2000) NOT NULL,
  `DEFAULT_SWITCH_TAG_MAPS` text NOT NULL,
  `SWITCH_TAG_MAPS` text NOT NULL,
  `DEFAULT_WHITE_PRESERVING_TAGS` text NOT NULL,
  `DEFAULT_INTERNAL_TAGS` text NOT NULL,
  `INTERNAL_TAGS` text NOT NULL,
  `WHITE_PRESERVING_TAGS` text NOT NULL,
  `DEFAULT_NON_TRANSLATABLE_META_ATTRIBUTES` text NOT NULL,
  `NON_TRANSLATABLE_META_ATTRIBUTES` text NOT NULL,
  `DEFAULT_TRANSLATABLE_ATTRIBUTES` text NOT NULL,
  `TRANSLATABLE_ATTRIBUTES` text NOT NULL,
  `DEFAULT_LOCALIZABLE_ATTRIBUTE_MAPS` text NOT NULL,
  `LOCALIZABLE_ATTRIBUTE_MAPS` text NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `jsp_filter`;
CREATE TABLE IF NOT EXISTS jsp_filter (
  ID BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  FILTER_NAME VARCHAR(255) NOT NULL,
  FILTER_DESCRIPTION VARCHAR(2000),
  COMPANY_ID BIGINT UNSIGNED NOT NULL,
  IS_ADDITIONAL_HEAD_ADDED CHAR(1) NOT NULL DEFAULT 'N',
  IS_ESCAPE_ENTITY CHAR(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (`ID`)
)
ENGINE = InnoDB;

DROP TABLE IF EXISTS `indd_filter`;
CREATE TABLE `indd_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  `TRANSLATE_HIDDEN_LAYER` char(1) NOT NULL DEFAULT 'N',
  `TRANSLATE_MASTER_LAYER` char(1) NOT NULL DEFAULT 'Y',
  `TRANSLATE_FILE_INFO` char(1) NOT NULL DEFAULT 'N',
  `TRANSLATE_HYPERLINKS` char(1) NOT NULL DEFAULT 'N',
  `TRANSLATE_HIDDEN_CONDTEXT` char(1) NOT NULL DEFAULT 'Y',
  `SKIP_TRACKING_KERNING` char(1) NOT NULL DEFAULT 'N',
  `EXTRACT_LINE_BREAK` char(1) NOT NULL DEFAULT 'N',
  `REPLACE_NONBREAKING_SPACE` char(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `INDD_TU_MAPPING`;
CREATE TABLE INDD_TU_MAPPING (
  ID BIGINT NOT NULL AUTO_INCREMENT,
  JOB_ID BIGINT NOT NULL,
  SOURCE_PAGE_ID BIGINT NOT NULL,
  TU_ID BIGINT NOT NULL,
  COMPANY_ID BIGINT NOT NULL,
  PAGE_NUM INT(11) NOT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE KEY `ID_UNIQUE` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `frame_maker_filter`;
CREATE TABLE `frame_maker_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(2000) DEFAULT NULL,
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  `TRANSLATE_FOOT_NOTE` CHAR(1) NOT NULL DEFAULT 'Y',
  `TRANSLATE_LEFT_MASTER_PAGE` CHAR(1) NOT NULL DEFAULT 'N',
  `TRANSLATE_RIGHT_MASTER_PAGE` CHAR(1) NOT NULL DEFAULT 'N',
  `TRANSLATE_OTHER_MASTER_PAGE` CHAR(1) NOT NULL DEFAULT 'N',
  `IS_TOC_TRANSLATE` char(1) NOT NULL DEFAULT 'N',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `plain_text_filter`;
CREATE TABLE `plain_text_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  `CONFIG_XML` text,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `qa_filter`;
CREATE TABLE `qa_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  `CONFIG_XML` text,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `base_filter`;
CREATE TABLE `base_filter` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `FILTER_NAME` varchar(255) NOT NULL,
  `FILTER_DESCRIPTION` varchar(4000) DEFAULT NULL,
  `COMPANY_ID` bigint(20) unsigned NOT NULL,
  `CONFIG_XML` text,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `base_filter_mapping`;
CREATE TABLE `base_filter_mapping` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `base_filter_id` bigint(20) NOT NULL,
  `filter_table_name` varchar(60) NOT NULL,
  `filter_id` bigint(20) NOT NULL,
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS filter_json;
CREATE TABLE filter_json
(
  ID BIGINT(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  FILTER_NAME VARCHAR(255) NOT NULL,
  FILTER_DESCRIPTION VARCHAR(400) DEFAULT NULL,
  ENABLE_SID_SUPPORT CHAR(1) NOT NULL,
  ELEMENT_POST_FILTER_ID BIGINT(20) DEFAULT NULL,
  ELEMENT_POST_FILTER_TABLE_NAME VARCHAR(100) DEFAULT NULL,
  BASE_FILTER_ID BIGINT(20) DEFAULT NULL,
  COMPANY_ID BIGINT(20) UNSIGNED DEFAULT NULL,
  PRIMARY KEY (ID)
) ENGINE=INNODB AUTO_INCREMENT = 1;

DROP TABLE IF EXISTS `xliff_alt`;
CREATE TABLE IF NOT EXISTS `xliff_alt` (
             `ID` bigint(20) NOT NULL AUTO_INCREMENT,
             `TUV_ID` bigint(20) NOT NULL,
             `SEGMENT` text NOT NULL,
             `LANGUAGE` varchar(30) DEFAULT NULL,
             `QUALITY` varchar(30) DEFAULT NULL,
             `SOURCE_SEGMENT` text,
             PRIMARY KEY (`ID`)
) ENGINE=InnoDB  DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS `tu_concept_relation`;
CREATE TABLE `tu_concept_relation` (
                       `ID` bigint(20) NOT NULL AUTO_INCREMENT,
                       `TU_ID` bigint(20) DEFAULT NULL,
                       `CONCEPT_ID` bigint(20) DEFAULT NULL,
                       `ADDED_LANGUAGE` varchar(255) DEFAULT NULL,
                       PRIMARY KEY (`ID`)
                     ) ENGINE=InnoDB DEFAULT CHARSET=utf8;


DROP TABLE IF EXISTS `remote_access_history`;
CREATE TABLE IF NOT EXISTS `remote_access_history` (
                         `ID` bigint(20) NOT NULL AUTO_INCREMENT,
                         `ACCESS_TOKEN` varchar(60) DEFAULT NULL,
                         `API_NAME` varchar(60) DEFAULT NULL,
                         `USER_ID` varchar(25) DEFAULT NULL,
                         `CREATE_DATE` datetime DEFAULT NULL,
                         `LAST_ACCESS_DATE` datetime DEFAULT NULL,
                         `CONTENTS` text,
                         PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS TM_TB_USERS CASCADE;
CREATE TABLE TM_TB_USERS
(
 TM_TB_ID BIGINT NOT NULL,
 USER_ID VARCHAR(80) NOT NULL,
 T_TYPE  CHAR(2) NOT NULL,
 PRIMARY KEY(TM_TB_ID, USER_ID, T_TYPE)
);

-- System log info
DROP TABLE IF EXISTS SYSTEM_LOG CASCADE;
CREATE TABLE SYSTEM_LOG (
    ID BIGINT(20) NOT NULL AUTO_INCREMENT,
    EVENT_TYPE VARCHAR(20) NOT NULL,
    OBJECT_TYPE VARCHAR(60) NOT NULL,
    OBJECT_ID VARCHAR(20),
    OPERATOR VARCHAR(20) NOT NULL,
    OPERATE_TIME TIMESTAMP NOT NULL,
    MESSAGE VARCHAR(500),
    COMPANY_ID BIGINT(20) NOT NULL,
    PRIMARY KEY (ID)
) AUTO_INCREMENT = 1000;

-- [GBS-3135] Create Reports Data Table.
DROP TABLE IF EXISTS REPORTS_DATA CASCADE;
CREATE TABLE REPORTS_DATA (                                                                                          
	USER_ID varchar(100) NOT NULL,
	REPORT_JOBIDS varchar(500) NOT NULL DEFAULT '',
	REPORT_TYPELIST varchar(500) NOT NULL DEFAULT '',
	STATUS varchar(100) DEFAULT NULL,
	PERCENT double DEFAULT NULL,
	PRIMARY KEY (USER_ID,REPORT_JOBIDS(255),REPORT_TYPELIST(255)) 
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

DROP TABLE IF EXISTS CATEGORY_POST_REVIEW CASCADE;
CREATE TABLE CATEGORY_POST_REVIEW (
  ID BIGINT(20) AUTO_INCREMENT PRIMARY KEY NOT NULL,
  CATEGORY_NAME VARCHAR(200),
  CATEGORY_TYPE VARCHAR(20),
  IS_ACTIVE CHAR(1) NOT NULL DEFAULT 'Y',
  COMPANY_ID BIGINT(20) NOT NULL
)  AUTO_INCREMENT = 1;

-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -
--  Begin Indexes
-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -

-- -- -- - Begin COST_BY_WORD_COUNT Indexes

CREATE INDEX INDEX_COST_ID ON
   COST_BY_WORD_COUNT(COST_ID);

-- -- -- -Close COST_BY_WORD_COUNT Indexes

-- -- -- - Begin TASK_INFO Indexes

CREATE INDEX INDEX_WORKFLOW_ID ON
   TASK_INFO(WORKFLOW_ID);

-- -- -- -Close TASK_INFO Indexes

-- -- -- - Begin TASK_INTERIM Indexes
CREATE INDEX INDEX_TASK_ID ON TASK_INTERIM(TASK_ID);
CREATE INDEX INDEX_USER_ID_STATE ON TASK_INTERIM(USER_ID,STATE);
-- -- -- -Close TASK_INTERIM Indexes


-- -- -- - Begin Translation_Unit_Variant_1 Indexes

CREATE INDEX INDEX_ID_LOCALE_STATE ON
   TRANSLATION_UNIT_VARIANT_1(ID, LOCALE_ID, STATE);

CREATE INDEX INDEX_TU_LOC_STATE ON
   TRANSLATION_UNIT_VARIANT_1(TU_ID, LOCALE_ID, STATE);

CREATE INDEX IDX_TUV_EMKEY_LOC_TU ON
   TRANSLATION_UNIT_VARIANT_1(EXACT_MATCH_KEY, LOCALE_ID, TU_ID);

-- CREATE INDEX  index_tuid_emkey ON
--    translation_unit_variant_1(exact_match_key);
--  don't know if that one is needed

CREATE INDEX INDEX_TUV_TUID_STATE ON
   TRANSLATION_UNIT_VARIANT_1(TU_ID, STATE);

CREATE UNIQUE INDEX IDX_TUV_ID_TU
    ON TRANSLATION_UNIT_VARIANT_1
    (ID, TU_ID);


CREATE INDEX IDX_TUV_LOC_TU_ORDER_ID
     ON TRANSLATION_UNIT_VARIANT_1
        (LOCALE_ID, TU_ID, ORDER_NUM, ID);

-- -- -- -Close Translation_Unit_Variant_1 Indexes


-- -- -- -Begin Template Indexes

CREATE INDEX IDX_TEMPLATE_SP_TYPE_ID
     ON TEMPLATE
        (SOURCE_PAGE_ID, TYPE, ID);

-- -- -- -Close Template Indexes

-- -- -- -Begin Template_Part Indexes

CREATE INDEX IDX_TU_ID ON TEMPLATE_PART(TU_ID);

CREATE INDEX IDX_TEMPLATEPART_TEMPID
     ON TEMPLATE_PART
        (TEMPLATE_ID);

-- -- -- -Close Template_Part Indexes

-- -- -- -Begin TEMPLATE_PART_ARCHIVED Indexes

CREATE INDEX IDX_TU_ID ON TEMPLATE_PART_ARCHIVED(TU_ID);

CREATE INDEX IDX_TEMPLATE_PART_ARCHIVED_TEMPID ON TEMPLATE_PART_ARCHIVED(TEMPLATE_ID);

-- -- -- -Close TEMPLATE_PART_ARCHIVED Indexes

-- -- -- -Begin Leverage_Match_1 Indexes

CREATE INDEX INDEX_ORIG_LEV_ORD ON
   LEVERAGE_MATCH_1(ORIGINAL_SOURCE_TUV_ID);

CREATE INDEX IDX_LM_ORDER_ORIGSOURCETUV
    ON LEVERAGE_MATCH_1
    (ORDER_NUM, ORIGINAL_SOURCE_TUV_ID);

CREATE INDEX IDX_LM_SRCPGID_TGTLOCID_ORDNUM
   ON LEVERAGE_MATCH_1
   (SOURCE_PAGE_ID, TARGET_LOCALE_ID,ORDER_NUM);

CREATE INDEX IDX_LM_ORIGSRCTUV_TGTLOCID
   ON LEVERAGE_MATCH_1
   (ORIGINAL_SOURCE_TUV_ID, TARGET_LOCALE_ID);

-- -- --  Close Leverage_Match_1 Indexes

-- -- -- -Begin Translation_Unit_1 Indexes

CREATE INDEX INDEX_ID_LG ON TRANSLATION_UNIT_1(ID, LEVERAGE_GROUP_ID);

CREATE INDEX IDX_TU_LG_ID_ORDER
     ON TRANSLATION_UNIT_1
        (LEVERAGE_GROUP_ID, ID, ORDER_NUM);


CREATE INDEX INDEX_IDLT_TU_TM ON
   TRANSLATION_UNIT_1(ID, LOCALIZE_TYPE, TU_TYPE, TM_ID);

CREATE INDEX IDX_TU_TYPE_ID ON
   TRANSLATION_UNIT_1(TU_TYPE, ID);
-- -- -- Close Translation_Unit_1 Indexes


-- -- -- Begin Source_Page_Leverage_Group

CREATE INDEX IDX_SPLG_SP_LG
    ON SOURCE_PAGE_LEVERAGE_GROUP
    (SP_ID, LG_ID);

-- -- -Close Source_Page_Leverage_Group

-- -- -- Begin Target_Page_Leverage_Group

CREATE INDEX IDX_TPLG_TP_LG
    ON TARGET_PAGE_LEVERAGE_GROUP
    (TP_ID, LG_ID);

-- -- - Close Target_Page_Leverage_Group

-- -- - Begin Target_Page

CREATE INDEX INDEX_SPID_WFID ON
   TARGET_PAGE(SOURCE_PAGE_ID, WORKFLOW_IFLOW_INSTANCE_ID);

-- --  Close Target_Page


CREATE INDEX INDEX_ID_DST ON SOURCE_PAGE(ID,DATA_SOURCE_TYPE);

CREATE INDEX INDEX_ID_TS_EPID ON SOURCE_PAGE(ID, TIMESTAMP, EXTERNAL_PAGE_ID);

CREATE INDEX INDEX_EPID ON SOURCE_PAGE(EXTERNAL_PAGE_ID);

CREATE INDEX INDEX_TUV_ID ON XLIFF_ALT(TUV_ID);

CREATE INDEX INDEX_ID_STATE ON JOB(ID, STATE);

CREATE INDEX INDEX_JOB_NAME ON JOB(NAME);

CREATE INDEX INDEX_STATE_TIMESTAMP ON JOB(STATE, TIMESTAMP);

CREATE INDEX INDEX_WFIDSTATE ON WORKFLOW(IFLOW_INSTANCE_ID, STATE);

CREATE INDEX INDEX_WFIDTLID ON WORKFLOW (IFLOW_INSTANCE_ID, TARGET_LOCALE_ID);

CREATE INDEX INDEX_WFID ON WORKFLOW_OWNER(WORKFLOW_ID);

CREATE INDEX INDEX_ID_USERID ON PROJECT(PROJECT_SEQ, MANAGER_USER_ID);

CREATE INDEX INDEX_ID_BATCHID ON REQUEST(ID,BATCH_ID);

CREATE INDEX INDEX_ID_PAGEID ON REQUEST(ID, PAGE_ID);

CREATE INDEX INDEX_REQUEST_PAGEID ON REQUEST(PAGE_ID);

CREATE INDEX INDEX_REQUEST_JOBID ON REQUEST(JOB_ID);

CREATE INDEX INDEX_REQUEST_BATCHID ON REQUEST(BATCH_ID);

CREATE INDEX INDEX_IS_UI_LOCALE ON LOCALE(IS_UI_LOCALE);

CREATE INDEX INDEX_ISO_COUNTRY_LANG ON LOCALE(ISO_COUNTRY_CODE,ISO_LANG_CODE);

CREATE INDEX INDEX_SL_ACTIVE ON LOCALE_PAIR (IS_ACTIVE, SOURCE_LOCALE_ID);

CREATE INDEX INDEX_CTUVID ON TASK_TUV(CURRENT_TUV_ID);

CREATE INDEX IDX_TASK_TUV_PREV_TUVID ON TASK_TUV( PREVIOUS_TUV_ID );

CREATE INDEX INDEX_SLID ON L10N_PROFILE(SOURCE_LOCALE_ID);

CREATE INDEX INDEX_IDNAME ON L10N_PROFILE(ID, NAME);

CREATE INDEX INDEX_LKEY_OTYPE ON ISSUE(LOGICAL_KEY, ISSUE_OBJECT_TYPE);

CREATE INDEX INDEX_STATUS_OTYPE ON ISSUE(STATUS, ISSUE_OBJECT_TYPE);

CREATE INDEX INDEX_OID_OTYPE ON ISSUE(ISSUE_OBJECT_ID, ISSUE_OBJECT_TYPE);

CREATE INDEX INDEX_TARGET_PAGE_ID ON ISSUE(TARGET_PAGE_ID);

CREATE INDEX INDEX_IID ON ISSUE_HISTORY(ISSUE_ID);

CREATE INDEX INDEX_TPID_TUVID_SUBID ON IMAGE_REPLACE_FILE_MAP(TARGET_PAGE_ID, TUV_ID, SUB_ID);

CREATE INDEX INDEX_IMAGEMAP_TPID ON IMAGE_REPLACE_FILE_MAP(TARGET_PAGE_ID);

CREATE INDEX IDX_IMAGE_REP_FM_TUVID ON IMAGE_REPLACE_FILE_MAP(TUV_ID);

CREATE INDEX IDX_RESERVED_TIME ON RESERVED_TIME (USER_CALENDAR_ID, TASK_ID, START_TIME, END_TIME);

CREATE INDEX IDX_L10N_PROJID_ID ON L10N_PROFILE (PROJECT_ID, ID);

CREATE INDEX IDX_REQUEST_L10NID_JOB ON REQUEST(L10N_PROFILE_ID, JOB_ID);

CREATE INDEX IDX_WORKFLOW_JOB ON WORKFLOW(JOB_ID);

CREATE INDEX IDX_WORKFLOW_STATE_JOB ON WORKFLOW(STATE, JOB_ID);

CREATE INDEX IDX_TASK_INFO_WORKFLOW_ID ON TASK_INFO (WORKFLOW_ID);

CREATE INDEX IDX_COST_BY_WORD_COUNT_COST_ID ON COST_BY_WORD_COUNT(COST_ID);
