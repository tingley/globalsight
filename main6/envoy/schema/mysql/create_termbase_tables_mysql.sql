--  TERM_LEVERAGE_MATCH
-- 

DROP TABLE IF EXISTS TERM_LEVERAGE_MATCH CASCADE;

CREATE TABLE TERM_LEVERAGE_MATCH
(
  SOURCE_TUV_ID BIGINT,
  TERMBASE_ID INT(10)
    NOT NULL,
  SOURCE_TERM_ID INT(10)
    NOT NULL,
  TARGET_TERM_ID INT(10)
    NOT NULL,
  TARGET_PAGE_LOCALE VARCHAR(10)
    NOT NULL,
  ORDER_NUM SMALLINT,
  SCORE SMALLINT
);

CREATE INDEX INDEX_SOURCE_TUV_ID ON TERM_LEVERAGE_MATCH( SOURCE_TUV_ID );

--  The TB_AUDIT_LOG table is a simple history table
--  of actions against the termbases (targets are concepts,terms,termbase)
--  It does not relate to any other TB table
DROP TABLE IF EXISTS TB_AUDIT_LOG CASCADE;

CREATE TABLE TB_AUDIT_LOG 
(
   EVENT_DATE DATETIME NOT NULL,
   USERNAME   VARCHAR(80) NOT NULL,
   TERMBASE   VARCHAR(200) NOT NULL,
   TARGET     VARCHAR(200) NOT NULL,
   LANGUAGES  VARCHAR(500) NOT NULL,
   ACTION     VARCHAR(30) NOT NULL,
   DETAILS    VARCHAR(4000) NOT NULL
);

DROP TABLE IF EXISTS TB_LOCK CASCADE;

CREATE TABLE TB_LOCK (
    TBid  INT(10) NOT NULL,
    Cid   INT(10) NOT NULL,
    Lock_Info   VARCHAR(250) NOT NULL,
    PRIMARY KEY (TBid, Cid)
);

DROP TABLE IF EXISTS TB_TERM CASCADE;

CREATE TABLE TB_TERM (
       TBID                 INT(20) DEFAULT NULL,
       TID                  INT(20) NOT NULL AUTO_INCREMENT,
       LID                  INT(20) DEFAULT NULL,
       CID                  INT(20) DEFAULT NULL,
       LANG_NAME            VARCHAR(30) NOT NULL,
       TERM                 VARCHAR(2000) NOT NULL,
       TYPE                 VARCHAR(50) NOT NULL DEFAULT '',
       STATUS               VARCHAR(20) NOT NULL DEFAULT '',
       SORT_KEY             TEXT(3000) NOT NULL,
       XML                  TEXT NULL,
       CREATED_ON           TIMESTAMP DEFAULT CURRENT_TIMESTAMP NULL,
       CREATED_BY           VARCHAR(80) NULL,
       MODIFIED_ON          TIMESTAMP DEFAULT '2037-12-31 23:59:59' NULL,
       MODIFIED_BY          VARCHAR(80) NULL,
       PRIMARY KEY (TID)
);

DROP TRIGGER IF EXISTS MODIFIED_ON_TIME;
DELIMITER //
CREATE TRIGGER MODIFIED_ON_TIME BEFORE INSERT ON TB_TERM 
FOR EACH ROW 
BEGIN
    DECLARE T TIMESTAMP DEFAULT '2037-12-31 23:59:59';
    IF NEW.MODIFIED_ON = T
	  THEN
	    SET NEW.MODIFIED_ON = NOW();
	END IF;
END;
//
DELIMITER ;

CREATE INDEX IDX_TERM_TBID_CID_LID ON TB_TERM (TBID, CID, LID);
CREATE INDEX IDX_TERM_LID ON TB_TERM (LID);
CREATE INDEX IDX_TERM_CID ON TB_TERM (CID);

DROP TABLE IF EXISTS TB_LANGUAGE CASCADE;

CREATE TABLE TB_LANGUAGE (
       TBID                 INT(20) DEFAULT NULL,
       LID                  INT(20) NOT NULL AUTO_INCREMENT,
       CID                  INT(20) DEFAULT NULL,
       NAME                 VARCHAR(30) NOT NULL,
       LOCALE               VARCHAR(5) NOT NULL,
       XML                  TEXT NULL,
       PRIMARY KEY (LID)
);

CREATE INDEX IDX_LANGUAGE_TBID_CID_LID ON TB_LANGUAGE (TBID, CID, LID);
CREATE INDEX IDX_LANGUAGE_CID ON TB_LANGUAGE (CID);

DROP TABLE IF EXISTS TB_CONCEPT CASCADE;

CREATE TABLE TB_CONCEPT (
       TBID                 INT(20) DEFAULT NULL,
       CID                  INT(20) NOT NULL AUTO_INCREMENT,
       `DOMAIN`             VARCHAR(100) NOT NULL DEFAULT '',
       STATUS               VARCHAR(20) NOT NULL DEFAULT '',
       PROJECT              VARCHAR(100) NOT NULL DEFAULT '',
       XML                  TEXT NOT NULL,
       CREATED_ON           DATETIME NOT NULL,
       CREATED_BY           VARCHAR(80) NOT NULL,
       MODIFIED_ON          DATETIME NULL,
       MODIFIED_BY          VARCHAR(80) NULL,
       PRIMARY KEY (CID)
);

CREATE INDEX IDX_CONCEPT_TBID_CID ON TB_CONCEPT (TBID, CID);

DROP TABLE IF EXISTS TB_TERMBASE CASCADE;

CREATE TABLE TB_TERMBASE (
       TBID                 BIGINT AUTO_INCREMENT PRIMARY KEY,
       TB_NAME              VARCHAR(100) NOT NULL,
       TB_DESCRIPTION       VARCHAR(4000) NULL,
       TB_DEFINITION        TEXT NOT NULL,
       COMPANYID            BIGINT NOT NULL,
       CONSTRAINT FK_TERMBASE_COMPANYID FOREIGN KEY(COMPANYID) REFERENCES COMPANY(ID)
) AUTO_INCREMENT = 1000;


DROP TABLE IF EXISTS TB_SEQUENCE CASCADE;

CREATE TABLE TB_SEQUENCE (
       NAME             VARCHAR(30) NOT NULL,
       VALUE            INT(10) NOT NULL,
       PRIMARY KEY (NAME)
);


DROP TABLE IF EXISTS TB_USER_DATA CASCADE;

CREATE TABLE TB_USER_DATA (
       ID       INT(10) NOT NULL AUTO_INCREMENT,  
       TBID     INT(10) NOT NULL,
       TYPE     INTEGER,
       USERNAME VARCHAR(80),
       NAME     VARCHAR(200),
       ISDEFAULT CHAR(1) DEFAULT 'N'
         NOT NULL
         CHECK (ISDEFAULT IN ('Y', 'N')),
       VALUE    TEXT,
       PRIMARY KEY (ID)  
); 

CREATE INDEX IDX_TB_USER_DATA_TYPE_USERNAME ON TB_USER_DATA(TBID, TYPE, USERNAME);

DROP TABLE IF EXISTS TB_SCHEDULED_JOBS CASCADE;

CREATE TABLE TB_SCHEDULED_JOBS
(
        TBid	       INT(10) NOT NULL,
        `TYPE`	       VARCHAR(128) NOT NULL,
        MINUTES        VARCHAR(128),
        HOURS          VARCHAR(128),
        DAYS_OF_MONTH  VARCHAR(128),
        MONTHS         VARCHAR(128),
        DAYS_OF_WEEK   VARCHAR(128),
        DAY_OF_YEAR    VARCHAR(128),
        WEEK_OF_MONTH  VARCHAR(128),
        WEEK_OF_YEAR   VARCHAR(128),
	    `YEAR`	       VARCHAR(128),
        PRIMARY KEY (TBId, `Type`)  
);

COMMIT;
