## GBS-4495 perplexity score on MT
CREATE TABLE PERPLEXITY_SERVICE(
ID BIGINT
    AUTO_INCREMENT
    PRIMARY KEY,
  NAME VARCHAR(300)
    NOT NULL,
  COMPANY_ID bigint(20) unsigned NOT NULL,
  USER_NAME VARCHAR(300) NOT NULL,
  PASSWORD VARCHAR(300) NOT NULL,
  DESCRIPTION varchar(4000) NULL,
  URL VARCHAR(300) NOT NULL
) ENGINE=INNODB;

UPDATE permissiongroup SET PERMISSION_SET = CONCAT(PERMISSION_SET, '436|') WHERE PERMISSION_SET LIKE '%|388|%' AND PERMISSION_SET NOT LIKE '%|436|%';

ALTER TABLE workflow_template   
  ADD COLUMN PERPLEXITY_ID BIGINT,
  ADD COLUMN PERPLEXITY_KEY VARCHAR(60),
  ADD COLUMN PERPLEXITY_SOURCE_THRESHOLD double DEFAULT '-1',
  ADD COLUMN PERPLEXITY_TARGET_THRESHOLD double DEFAULT '-1';
  
ALTER TABLE TARGET_PAGE   
  ADD COLUMN MT_PERPLEXITY INT(10) DEFAULT 0; 

ALTER TABLE WORKFLOW   
  ADD COLUMN MT_PERPLEXITY_WORD_COUNT INT(10) DEFAULT 0;   
  

ALTER TABLE COMPANY   
  ADD COLUMN ENABLE_PERPLEXITY char(1) DEFAULT 'N';

DELIMITER $$

DROP PROCEDURE IF EXISTS PROC_ALTER_REPETITION_COLUMNS_I$$

CREATE PROCEDURE PROC_ALTER_REPETITION_COLUMNS_I()

    BEGIN
	DECLARE done INTEGER DEFAULT 0;
	DECLARE duplicate_key CONDITION FOR 1060;
	DECLARE v_tuvTableName VARCHAR(50);

	-- cursor
	DECLARE tuv_tables_cur CURSOR FOR
		SELECT a.TABLE_NAME FROM information_schema.TABLES a 
		WHERE a.TABLE_SCHEMA = DATABASE() 
		AND a.TABLE_NAME LIKE 'translation_unit_variant%';

	-- error handler
	DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done = 1;
	DECLARE CONTINUE HANDLER FOR duplicate_key SET done = 2;

	###### Add "PERPLEXITY_SOURCE", "PERPLEXITY_TARGET" and "PERPLEXITY_RESULT" columns to TUV tables.
	OPEN tuv_tables_cur;
	    tuv_table_lable: LOOP

		FETCH tuv_tables_cur INTO v_tuvTableName;

		IF done = 1 THEN
			SELECT 'Finished to add 3 columns to all tuv tables, end loop.' AS MESSAGE;
			LEAVE tuv_table_lable;
		END IF;

		SELECT CONCAT('Trying to add 3 columns to \'', v_tuvTableName, '\'.') AS MESSAGE;
		SET @a = CONCAT('ALTER TABLE ', v_tuvTableName, ' ADD COLUMN PERPLEXITY_SOURCE double, ADD COLUMN PERPLEXITY_TARGET double, ADD COLUMN PERPLEXITY_RESULT CHAR(1)');
		PREPARE s FROM @a; EXECUTE s;

		IF done = 2 THEN
			SET done = 0;
			SELECT CONCAT('Table \'', v_tuvTableName, '\' has been added the 3 columns, ignore...') AS MESSAGE;
		END IF;

	    END LOOP;
	CLOSE tuv_tables_cur;

    END$$

DELIMITER ;


CALL PROC_ALTER_REPETITION_COLUMNS_I;